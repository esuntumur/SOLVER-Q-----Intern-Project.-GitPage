{"version":3,"sources":["redux/actions/type.js","redux/reducers/authReducer.js","redux/reducers/questionReducer.js","redux/reducers/index.js","API/index.js","redux/actions/authentication.js","screens/Login/SignUp.js","screens/Home/QuestionPagination/index.js","screens/Login/LoginQuestionList.js","redux/actions/question.js","screens/Home/UpdateQuestion/plugins/HandleFullScreen.js","redux/actions/commentAction.js","screens/Home/UpdateQuestion/index.js","screens/Home/CommentList/UpdateComment/plugins/HandleFullScreen.js","screens/Home/CommentList/UpdateComment/index.js","screens/Home/CommentList/plugins/HandleFullScreen.js","screens/Home/CommentList/plugins/AudioPlugin.js","screens/Home/CommentList/Recorder/index.js","screens/Home/CommentList/CommentEditor.js","screens/Home/CommentList/index.js","screens/Login/LoginCommentList.js","screens/Login/LoginQuestionDetails.js","screens/Login/login.js","screens/Home/CreateQuestion/plugins/HandleFullScreen.js","screens/Home/CreateQuestion/QuestionEditor.js","screens/Home/Profile/Profile.js","screens/Home/Navigation/index.js","screens/Home/QuestionDetails/index.js","screens/Home/Navigation/QuestionOrderButtons.js","screens/Home/QuestionList/index.js","screens/Home/Home.jsx","screens/NotFoundPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN","LOGOUT","BACK_FROM_SELECTED_QUESTION","GET_QUESTION_BY_PAGE_NUMBER","SET_SELECTED_QUESTION","CREATE_QUESTION_TOGGLE","GET_BACK_FROM_EDIT_PROFILE","CREATE_PROFILE_TOGGLE","UPDATE_QUESTION_TOGGLE","DELETE_SELECTED_QUESTION","UPDATE_SELECTED_QUESTION","CREATE_QUESTION","VOTE_SELECTED_QUESTION","GET_COMMENTS_BY_PAGE_NUMBER","VOTE_COMMENT","SEND_COMMENT","UPDATE_COMMENT","DELETE_COMMENT","UPDATE_COMMENT_TOGGLE","SET_IMAGE_URL","SET_HTML_STRING","TOGGLE_RENDER_AUDIO_RECORDER","SET_AUDIO_URL","initialState","isSignedIn","localStorage","getItem","JSON","parse","token","user","authReducer","state","action","type","payload","questions","comments","selectedQuestion","renderCreateQuestion","renderUpdateQuestion","renderProfile","selectedCommentId","maxPageQuestion","currentPageQuestion","maxPageComment","currentPageComment","imageUrl","audioUrl","audioId","htmlString","searchValue","renderOrderButton","renderAudioRecorder","combineReducers","auth","question","stringify","audio_url","public_id","console","log","c","filter","comment","id","idx","item","index","splice","maxPage","currentPage","forEach","selectedComment","votes","push","user_id","unshift","q","includes","vote","axios","create","baseURL","signupUser","formVlaues","dispatch","a","api","post","then","response","Container","connect","props","useForm","register","errors","formState","handleSubmit","watch","className","onSubmit","data","username","email","email2","password","password2","placeholder","required","minLength","pattern","maxLength","value","QuestionPagination","getQuestionsByPageNumber","pageNum","i","aria-label","onClick","aria-hidden","disabled","length","map","number","QuestionList","setSelectedQuestion","asyncVoteSelectedQuestion","title","dangerouslySetInnerHTML","__html","substring","API","questionPage","searchQuestion","order","keyWord","updateQuestionToggle","updateQuestion","put","params","headers","Authorization","object","createQuestionToggle","createProfileToggle","getBackFromEditProfile","backFromSelectedQuestion","deleteSelectedQuestion","delete","voteSelectedQuestion","question_id","res","catch","error","HandleFullScreen","handleFullScreen","bind","this","editor","on","PluginComponent","pluginName","align","setHtmlString","html","reqImageUrl","e","form","FormData","append","name","url","createComment","answer","getCommentsByPageNumber","commentPage","deleteComment","updateComment","commentId","updateCommentToggle","voteComment","MdEditor","use","mdParser","MarkdownIt","onImageUpload","callback","submitHandler","style","height","width","renderHTML","text","render","onChange","UpdateComment","handleEditorChange","event","preventDefault","ref","mdEditor","Component","mapDispatchToProps","AudioPlugin","handleClick","setRenderAudioRecorder","xmlns","fill","viewBox","d","defaultConfig","App","start","setState","recordState","RecordState","START","stop","STOP","audioData","reqAudioUrl","blob","onStop","CommentEditor","postComment","controls","src","React","audio","CommentList","target","myFile","rel","href","voteCommentAsync","deleteCommentAsync","QuestionDetails","LoginCommentList","loginUser","undefined","status","setItem","bio","profile","useState","mounted","setMounted","useEffect","logoutUser","alt","data-bs-toggle","aria-haspopup","aria-expanded","aria-labelledby","createQuestion","blurBackground","document","getElementById","classList","toggle","Profile","user_name","user_bio","user_email","user_photo","Navigation","searchSubmitHandler","data-bs-target","aria-controls","QuestionOrderButtons","searchOrderHandler","role","Home","orderType","place","effect","data-tip","data-for","NotFoundPage","background","to","path","component","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.14208556.chunk.js","sourcesContent":["export const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const BACK_FROM_SELECTED_QUESTION = \"BACK_FROM_SELECTED_QUESTION\";\r\n\r\nexport const GET_QUESTION_BY_PAGE_NUMBER = \"GET_QUESTION_BY_PAGE_NUMBER\"; // Бүх асуултуудыг авах\r\nexport const SET_SELECTED_QUESTION = \"SET_SELECTED_QUESTION\"; // сонгогдсон асуултыг ХАДГАЛАХ\r\nexport const SET_SELECTED_QUESTION_FOR_VOTE = \"SET_SELECTED_QUESTION_FOR_VOTE\"; // сонгогдсон асуултыг ХАДГАЛАХ\r\nexport const CREATE_QUESTION_TOGGLE = \"CREATE_QUESTION_TOGGLE\"; //\r\nexport const GET_BACK_FROM_EDIT_PROFILE = \"GET_BACK_FROM_EDIT_PROFILE\";\r\nexport const CREATE_PROFILE_TOGGLE = \"PROFILE_TOGGLE\";\r\nexport const UPDATE_QUESTION_TOGGLE = \"UPDATE_QUESTION_TOGGLE\"; //\r\nexport const DELETE_SELECTED_QUESTION = \"DELETE_SELECTED_QUESTION\";\r\nexport const UPDATE_SELECTED_QUESTION = \"UPDATE_SELECTED_QUESTION\";\r\nexport const SET_QUESTION_PAGE = \"SET_QUESTION_PAGE\";\r\nexport const CREATE_QUESTION = \"CREATE_QUESTION\";\r\nexport const DELETE_QUESTION = \"DELETE_QUESTION\";\r\nexport const UPDATE_QUESTION = \"UPDATE_QUESTION\";\r\nexport const VOTE_SELECTED_QUESTION = \"VOTE_SELECTED_QUESTION\";\r\n\r\n// * COMMENTS\r\nexport const GET_COMMENTS_BY_PAGE_NUMBER = \"GET_COMMENTS_BY_PAGE_NUMBER\";\r\nexport const VOTE_COMMENT = \"VOTE_COMMENT\";\r\nexport const SEND_COMMENT = \"SEND_COMMENT\";\r\nexport const UPDATE_COMMENT = \"UPDATE_COMMENT\";\r\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\r\nexport const UPDATE_COMMENT_TOGGLE = \"UPDATE_COMMENT_TOGGLE\";\r\nexport const SET_IMAGE_URL = \"SET_IMAGE_URL\";\r\nexport const SET_HTML_STRING = \"SET_HTML_STRING\";\r\nexport const TOGGLE_RENDER_AUDIO_RECORDER = \"TOGGLE_RENDER_AUDIO_RECORDER\";\r\nexport const SET_AUDIO_URL = \"SET_AUDIO_URL\";\r\n","import { LOGIN, LOGOUT } from \"../actions/type\";\r\n\r\nconst initialState = {\r\n  isSignedIn: localStorage.getItem(\"isSignedIn\")\r\n    ? JSON.parse(localStorage.getItem(\"isSignedIn\"))\r\n    : null,\r\n  token: localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null,\r\n  user: {},\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        isSignedIn: true,\r\n        token: action.payload.token,\r\n        user: action.payload.user,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isSignedIn: false,\r\n        token: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import {\r\n  GET_QUESTION_BY_PAGE_NUMBER,\r\n  SET_SELECTED_QUESTION,\r\n  BACK_FROM_SELECTED_QUESTION,\r\n  CREATE_QUESTION,\r\n  CREATE_QUESTION_TOGGLE,\r\n  CREATE_PROFILE_TOGGLE,\r\n  DELETE_SELECTED_QUESTION,\r\n  UPDATE_QUESTION_TOGGLE,\r\n  UPDATE_SELECTED_QUESTION,\r\n  VOTE_SELECTED_QUESTION,\r\n  GET_COMMENTS_BY_PAGE_NUMBER,\r\n  VOTE_COMMENT,\r\n  SEND_COMMENT,\r\n  DELETE_COMMENT,\r\n  UPDATE_COMMENT,\r\n  UPDATE_COMMENT_TOGGLE,\r\n  SET_IMAGE_URL,\r\n  SET_HTML_STRING,\r\n  TOGGLE_RENDER_AUDIO_RECORDER,\r\n  SET_AUDIO_URL,\r\n  GET_BACK_FROM_EDIT_PROFILE,\r\n} from \"../actions/type\";\r\n\r\nconst initialState = {\r\n  questions: [],\r\n  comments: [],\r\n  selectedQuestion: false,\r\n  renderCreateQuestion: false,\r\n  renderUpdateQuestion: false,\r\n  renderProfile: false,\r\n  selectedCommentId: null,\r\n  maxPageQuestion: 1,\r\n  currentPageQuestion: 1,\r\n  maxPageComment: 1,\r\n  currentPageComment: 1,\r\n  imageUrl: \"\",\r\n  audioUrl: \"\",\r\n  audioId: null,\r\n  htmlString: \"\",\r\n  searchValue: \"\",\r\n  renderOrderButton: false,\r\n  renderAudioRecorder: false,\r\n};\r\nexport const questionReducer = (state = JSON.parse(JSON.stringify(initialState)), action) => {\r\n  switch (action.type) {\r\n    case SET_AUDIO_URL: {\r\n      return {\r\n        ...state,\r\n        audioUrl: action.payload.audio_url,\r\n        audioId: action.payload.public_id,\r\n      };\r\n    }\r\n    case TOGGLE_RENDER_AUDIO_RECORDER: {\r\n      return {\r\n        ...state,\r\n        renderAudioRecorder: !state.renderAudioRecorder,\r\n      };\r\n    }\r\n    case UPDATE_QUESTION_TOGGLE: {\r\n      return {\r\n        ...state,\r\n        renderUpdateQuestion: !state.renderUpdateQuestion,\r\n      };\r\n    }\r\n    case SET_HTML_STRING: {\r\n      return {\r\n        ...state,\r\n        htmlString: action.payload,\r\n      };\r\n    }\r\n    case SET_IMAGE_URL: {\r\n      console.log(`Logged Output ~ SET_IMAGE_URL action.payload `, action.payload);\r\n      return { ...state, imageUrl: action.payload };\r\n    }\r\n    case UPDATE_COMMENT_TOGGLE: {\r\n      if (state.selectedCommentId !== null) {\r\n        return { ...state, selectedCommentId: null };\r\n      } else return { ...state, selectedCommentId: action.payload };\r\n    }\r\n    // TODO\r\n    case DELETE_COMMENT: {\r\n      // payload comment object\r\n      const c = state.comments.filter((comment) => {\r\n        return comment.id !== action.payload.id;\r\n      });\r\n      return {\r\n        ...state,\r\n        comments: c,\r\n      };\r\n    }\r\n\r\n    // TODO\r\n    case UPDATE_COMMENT: {\r\n      let idx;\r\n      let c = state.comments.filter((item, index) => {\r\n        if (action.payload.id === item.id) idx = index;\r\n        return action.payload.id !== item.id;\r\n      });\r\n      c.splice(idx, 0, action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        comments: c,\r\n      };\r\n    }\r\n    case GET_COMMENTS_BY_PAGE_NUMBER: {\r\n      return {\r\n        ...state,\r\n        comments: action.payload.comments,\r\n        maxPageComment: action.payload.maxPage,\r\n        currentPageComment: action.payload.currentPage,\r\n      };\r\n    }\r\n    case VOTE_COMMENT: {\r\n      // * action.payload: { selectedComment, user_id },\r\n      // TODO payload:   selectedComment.votes.push(user_id)\r\n\r\n      state.comments.forEach((comment) => {\r\n        if (comment.id === action.payload.selectedComment.id) {\r\n          comment.votes.push(action.payload.user_id);\r\n        }\r\n      });\r\n      return { ...state };\r\n    }\r\n    case SEND_COMMENT: {\r\n      state.comments.unshift(action.payload);\r\n      return {\r\n        ...state,\r\n        // comments: [action.payload, ...state.comments],\r\n      };\r\n    }\r\n    case GET_QUESTION_BY_PAGE_NUMBER: {\r\n      return action.payload && action.payload.searchValue\r\n        ? {\r\n            ...state,\r\n            questions: action.payload.questions,\r\n            maxPageQuestion: action.payload.maxPage,\r\n            currentPageQuestion: action.payload.currentPage,\r\n            selectedQuestion: false,\r\n            searchValue: action.payload.searchValue,\r\n            renderOrderButton: true,\r\n          }\r\n        : {\r\n            ...state,\r\n            questions: action.payload.questions,\r\n            maxPageQuestion: action.payload.maxPage,\r\n            currentPageQuestion: action.payload.currentPage,\r\n            selectedQuestion: false,\r\n            renderOrderButton: false,\r\n          };\r\n    }\r\n    case SET_SELECTED_QUESTION: {\r\n      return { ...state, selectedQuestion: action.payload };\r\n    }\r\n    case BACK_FROM_SELECTED_QUESTION: {\r\n      return {\r\n        ...state,\r\n        selectedQuestion: false,\r\n        renderCreateQuestion: false,\r\n        renderUpdateQuestion: false,\r\n        renderOrderButton: false,\r\n        searchValue: false,\r\n        audioUrl: false,\r\n      };\r\n    }\r\n    case VOTE_SELECTED_QUESTION: {\r\n      let selectedQuestion = action.payload.selectedQuestion,\r\n        idx,\r\n        user_id = action.payload.user_id;\r\n      let q = state.questions.filter((question, index) => {\r\n        if (selectedQuestion.id === question.id) idx = index;\r\n        return selectedQuestion.id !== question.id;\r\n      });\r\n      selectedQuestion.votes.includes(user_id)\r\n        ? (selectedQuestion.votes = selectedQuestion.votes.filter((vote, idx) => {\r\n            return vote !== user_id;\r\n          }))\r\n        : selectedQuestion.votes.push(user_id);\r\n\r\n      q.splice(idx, 0, selectedQuestion);\r\n\r\n      // TODO => VOTES-ruu user_id-g pushlah\r\n\r\n      return { ...state, questions: q };\r\n    }\r\n    case CREATE_QUESTION: {\r\n      console.log(`Logged Output ~ CREATE_QUESTION`, CREATE_QUESTION);\r\n      return {\r\n        ...state,\r\n        questions: [...state.questions, action.payload],\r\n        renderCreateQuestion: false,\r\n      };\r\n    }\r\n    case CREATE_QUESTION_TOGGLE: {\r\n      return {\r\n        ...state,\r\n        renderCreateQuestion: !state.renderCreateQuestion,\r\n      };\r\n    }\r\n\r\n    case CREATE_PROFILE_TOGGLE: {\r\n      return {\r\n        ...state,\r\n        renderProfile: !state.renderProfile,\r\n      };\r\n    }\r\n\r\n    case GET_BACK_FROM_EDIT_PROFILE: {\r\n      return {\r\n        ...state,\r\n        renderProfile: false,\r\n      };\r\n    }\r\n\r\n    case UPDATE_SELECTED_QUESTION: {\r\n      let selectedQuestion = action.payload,\r\n        idx;\r\n      let q = state.questions.filter((question, index) => {\r\n        if (selectedQuestion.id === question.id) idx = index;\r\n        return selectedQuestion.id !== question.id;\r\n      });\r\n      //  Condition\r\n      q.splice(idx, 0, selectedQuestion);\r\n\r\n      return {\r\n        ...state,\r\n        questions: q,\r\n        selectedQuestion: selectedQuestion,\r\n      };\r\n    }\r\n    case DELETE_SELECTED_QUESTION: {\r\n      const q = state.questions.filter((item) => {\r\n        return action.payload.id !== item.id;\r\n      });\r\n      return {\r\n        ...state,\r\n        questions: q,\r\n        selectedQuestion: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport { questionReducer } from \"./questionReducer\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  question: questionReducer,\r\n});\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://questions8ask.herokuapp.com/api/v1\",\r\n});\r\n","import { LOGIN, LOGOUT } from \"./type\";\r\nimport api from \"../../API\";\r\n\r\nexport const loginUser = (formVlaues) => async (dispatch) => {\r\n  const response = await api.post(\"/login\", formVlaues);\r\n\r\n  if (response.data.error === undefined && response.status === 200) {\r\n    localStorage.setItem(\"token\", response.data.token);\r\n    localStorage.setItem(\"user_id\", response.data.user.id);\r\n    localStorage.setItem(\"isSignedIn\", true);\r\n    localStorage.setItem(\"user_name\", response.data.user.username);\r\n    localStorage.setItem(\"user_email\", response.data.user.email);\r\n    localStorage.setItem(\"user_bio\", response.data.user.bio);\r\n    localStorage.setItem(\"user_photo\", response.data.user.profile);\r\n    console.log(\"user\", response.data.user)\r\n    dispatch({ type: LOGIN, payload: response.data });\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n  localStorage.setItem(\"token\", null);\r\n  localStorage.setItem(\"isSignedIn\", false);\r\n  dispatch({ type: LOGOUT, payload: null });\r\n};\r\n\r\nexport const signupUser = (formVlaues) => async (dispatch) => {\r\n  await api.post(\"/users\", formVlaues).then((response) => {\r\n    return true;\r\n  });\r\n  return false;\r\n};\r\n","import \"./login.scss\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signupUser } from \"../../redux/actions/authentication\";\r\nimport { useForm } from \"react-hook-form\";\r\n// email: \"dannd@example.com\",\r\n// password: \"238523a\",\r\nexport function SignUp(props) {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    watch,\r\n  } = useForm();\r\n  console.log(watch());\r\n  console.log(`Console.log  =>  ~ Login ~ errors`, errors);\r\n\r\n  const handleSubmitSignUp = (data) => {\r\n    const payload = {\r\n      user: {\r\n        username: data.username,\r\n        email: data.email2,\r\n        password: data.password2,\r\n      },\r\n    };\r\n\r\n    if (props.signupUser(payload)) console.log(\"sign up success\");\r\n    else console.log(\"sign up failed\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit(handleSubmitSignUp)}>\r\n      <h4 className=\"form__title\">Sign Up</h4>\r\n      {/* ---------------username--------------- */}\r\n      <div className=\"form_div\">\r\n        <input type=\"text\" className=\"form__input\" placeholder=\" \" {...register(\"username\", { required: true, minLength: 3 })} />\r\n        <label className=\"form__label\">Username</label>\r\n      </div>\r\n      {errors.username?.type === \"required\" && <span>Email is required</span>}\r\n      {errors.username?.type === \"minLength\" && <span>password minLength is 7</span>}\r\n      {/* ---------------Email------------- */}\r\n      <div className=\"form_div\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form__input\"\r\n          placeholder=\" \"\r\n          {...register(\"email2\", { required: true, pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/ })}\r\n        />\r\n        <label className=\"form__label\">Email</label>\r\n      </div>\r\n      {errors.email2?.type === \"required\" && <span>Email is required</span>}\r\n      {errors.email2?.type === \"pattern\" && <span>Email pattern is wrong.</span>}\r\n      {/* ---------------Password--------------- */}\r\n      <div className=\"form_div\">\r\n        <input type=\"password\" className=\"form__input\" placeholder=\" \" {...register(\"password2\", { required: true, minLength: 6, maxLength: 30 })} />\r\n        <label className=\"form__label\">Password</label>\r\n      </div>\r\n      {errors.password2?.type === \"required\" && <span>password is required.</span>}\r\n      {errors.password2?.type === \"minLength\" && <span>password minLength is 7</span>}\r\n      {errors.password2?.type === \"maxLength\" && <span>password maxLength is 30</span>}\r\n      {/* ---------------SUBMIT--------------- */}\r\n      <input type=\"submit\" className=\"form__button mb-3\" value=\"Sign Up\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nconst Container = connect(null, { signupUser })(SignUp);\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\n\r\nexport default function QuestionPagination(props) {\r\n  let { currentPageQuestion, getQuestionsByPageNumber, maxPageQuestion } = props;\r\n  let pageNum = [];\r\n\r\n  for (let i = 1; i <= maxPageQuestion; i++) {\r\n    pageNum.push(i);\r\n  }\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <div>\r\n        <ul className=\"pagination justify-content-center\">\r\n          {currentPageQuestion >= 2 ? (\r\n            <li className=\"page-item\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn pg-button\"\r\n                onClick={() => getQuestionsByPageNumber(--currentPageQuestion)}\r\n              >\r\n                <span aria-hidden=\"true\"><b>&laquo;</b></span>\r\n              </button>{\" \"}\r\n            </li>\r\n          ) : (\r\n            <li className=\"page-item\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn\"\r\n                disabled\r\n              >\r\n                <span aria-hidden=\"true\">&laquo;</span>\r\n              </button>{\" \"}\r\n            </li>\r\n          )}\r\n\r\n          {pageNum &&\r\n            pageNum.length > 0 &&\r\n            pageNum.map((number, idx) => (\r\n              <li key={idx} className=\"page-item\">\r\n                <button\r\n                  className=\"page-link pg-button rounded\"\r\n                  onClick={() => {\r\n                    getQuestionsByPageNumber(number);\r\n                  }}\r\n                  id={number}\r\n                >\r\n                  {number}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          {currentPageQuestion >= maxPageQuestion ? (\r\n            <button type=\"button\" className=\"btn\" disabled>\r\n              <span aria-hidden=\"true\">&raquo;</span>\r\n            </button>\r\n          ) : (\r\n            <li className=\"page-item\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn pg-button\"\r\n                onClick={() => getQuestionsByPageNumber(++currentPageQuestion)}\r\n              >\r\n                <span aria-hidden=\"true\"><b>&raquo;</b></span>\r\n              </button>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function QuestionList(props) {\r\n  const { questions, asyncVoteSelectedQuestion, setSelectedQuestion } = props;\r\n  return questions.map((i, idx) => (\r\n    <div key={idx}>\r\n      <div className=\"row card-group shadow p-5 m-5 border rounded\">\r\n        <div className=\"col-sm-2\">\r\n          <div className=\"card text-center\">\r\n            <div className=\"card-body\">\r\n              <div className=\"card-text\">\r\n                <span>{i.votes.length} </span>\r\n                {i.votes.length >= 2 ? \"votes\" : \"vote\"}\r\n              </div>\r\n              <hr />\r\n              <p className=\"card-text\">\r\n                <span>{i.comments} </span>\r\n                {i.comments >= 2 ? \"answers\" : \"answer\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-10\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\" onClick={() => setSelectedQuestion(i)}>\r\n                <b>{i.title}</b>\r\n              </h5>\r\n              {i.question.length > 300 ? (\r\n                <div>\r\n                  <div\r\n                    className=\"questionStyle card-text\"\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: i.question.substring(0, 300) + \"...\",\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n              ): (\r\n                <div>\r\n                  <div\r\n                    className=\"questionStyle card-text\"\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: i.question.substring(0, 300),\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n              )}\r\n              <p className=\"card-text text-end\">\r\n                <i>by </i>\r\n                <b> {i.user.username}</b>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n","import {\r\n  GET_QUESTION_BY_PAGE_NUMBER,\r\n  CREATE_QUESTION_TOGGLE,\r\n  CREATE_QUESTION,\r\n  CREATE_PROFILE_TOGGLE,\r\n  GET_BACK_FROM_EDIT_PROFILE,\r\n  SET_SELECTED_QUESTION,\r\n  BACK_FROM_SELECTED_QUESTION,\r\n  UPDATE_SELECTED_QUESTION,\r\n  DELETE_SELECTED_QUESTION,\r\n  VOTE_SELECTED_QUESTION,\r\n  UPDATE_QUESTION_TOGGLE,\r\n} from \"./type\";\r\nimport API from \"../../API\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n// todo VOTE QUESTION: questions/1/vote      json => {vote: { question_id: selectedQuestion.id }}\r\n\r\nexport const getQuestionsByPageNumber = (pageNum) => async (dispatch) => {\r\n  try {\r\n    await API.post(\"/questions/page\", { questionPage: pageNum }).then((response) => {\r\n      dispatch({ type: GET_QUESTION_BY_PAGE_NUMBER, payload: response.data });\r\n    });\r\n  } catch (error) {\r\n    console.log(`Console.log  =>  ~ getQuestionsByPageNumber ~ error`, error);\r\n  }\r\n};\r\n// TODO => searchQuestion\r\nexport const searchQuestion = (searchValue, order) => async (dispatch) => {\r\n  try {\r\n    await API.post(\"/questions/page\", {\r\n      keyWord: searchValue, //хайх утга\r\n      order: order, //эрэмблэлт\r\n      currentPage: \"1\", //Одоогийн page\r\n    }).then((response) => {\r\n      const questions = response.data.questions;\r\n      const maxPage = response.data.maxPage;\r\n      const currentPage = response.data.currentPage;\r\n      dispatch({\r\n        type: GET_QUESTION_BY_PAGE_NUMBER,\r\n        payload: { questions, maxPage, currentPage, searchValue },\r\n      });\r\n    });\r\n  } catch (error) {\r\n    console.log(`Console.log  =>  ~ searchQuestion ~ error`, error);\r\n  }\r\n};\r\nexport const updateQuestionToggle = () => async (dispatch) => {\r\n  dispatch({ type: UPDATE_QUESTION_TOGGLE });\r\n};\r\n\r\n// TODO => update question\r\nexport const updateQuestion = (payload) => async (dispatch) => {\r\n  try {\r\n    await API.put(`/questions/${payload.id}`, payload.params, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }).then((response) => {\r\n      dispatch({ type: UPDATE_SELECTED_QUESTION, payload: response.data.object });\r\n    });\r\n  } catch (error) {\r\n    console.log(`Console.log  =>  ~ updateQuestion ~ error`, error);\r\n  }\r\n};\r\n\r\nexport const createQuestionToggle = () => async (dispatch) => {\r\n  dispatch({ type: CREATE_QUESTION_TOGGLE });\r\n};\r\n\r\nexport const createQuestion = (params) => async (dispatch) => {\r\n  try {\r\n    await API.post(\"/questions\", params, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }).then((response) => {\r\n      dispatch({ type: CREATE_QUESTION, payload: response.data.object });\r\n    });\r\n  } catch (error) {\r\n    console.log(`Console.log  =>  ~ createQuestion ~ error`, error);\r\n  }\r\n};\r\n\r\nexport const createProfileToggle = () => async (dispatch) => {\r\n  dispatch({ type: CREATE_PROFILE_TOGGLE });\r\n};\r\n\r\nexport const getBackFromEditProfile = () => async (dispatch) => {\r\n  dispatch({ type: GET_BACK_FROM_EDIT_PROFILE });\r\n};\r\n\r\nexport const setSelectedQuestion = (selectedQuestion) => async (dispatch) => {\r\n  dispatch({ type: SET_SELECTED_QUESTION, payload: selectedQuestion });\r\n};\r\n\r\nexport const backFromSelectedQuestion = () => async (dispatch) => {\r\n  dispatch({ type: BACK_FROM_SELECTED_QUESTION });\r\n};\r\n\r\nexport const deleteSelectedQuestion = (selectedQuestion) => async (dispatch) => {\r\n  try {\r\n    const response = await API.delete(`/questions/${selectedQuestion.id}`, {\r\n      headers: { Authorization: token },\r\n    });\r\n    dispatch({ type: DELETE_SELECTED_QUESTION, payload: response.data.object });\r\n  } catch (error) {\r\n    console.log(`Console.log  =>  ~ deleteSelectedQuestion ~ error`, error);\r\n  }\r\n};\r\n\r\nexport const voteSelectedQuestion = (selectedQuestion, user_id) => async (dispatch) => {\r\n  try {\r\n    await API.post(\r\n      `/questions/${selectedQuestion.id}/vote`,\r\n      {\r\n        vote: { question_id: selectedQuestion.id },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      }\r\n    )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: VOTE_SELECTED_QUESTION,\r\n          payload: { selectedQuestion, user_id },\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  } catch (error) {\r\n    console.log(`Console.log  =>  ~ voteSelectedQuestion ~ error`, error);\r\n  }\r\n};\r\n","import * as React from \"react\";\r\nimport { PluginComponent } from \"react-markdown-editor-lite\";\r\n\r\nexport default class HandleFullScreen extends PluginComponent {\r\n  static pluginName = \"handle-full-screen\";\r\n  static align = \"left\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleFullScreen = this.handleFullScreen.bind(this);\r\n  }\r\n\r\n  handleFullScreen() {}\r\n\r\n  componentDidMount() {\r\n    this.editor.on(\"fullscreen\", this.handleFullScreen);\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.editor.off(\"fullscreen\", this.handleFullScreen);\r\n  // }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import API from \"../../API\";\r\nimport {\r\n  GET_COMMENTS_BY_PAGE_NUMBER,\r\n  VOTE_COMMENT,\r\n  SEND_COMMENT,\r\n  DELETE_COMMENT,\r\n  UPDATE_COMMENT_TOGGLE,\r\n  UPDATE_COMMENT,\r\n  SET_IMAGE_URL,\r\n  SET_HTML_STRING,\r\n  TOGGLE_RENDER_AUDIO_RECORDER,\r\n  SET_AUDIO_URL,\r\n} from \"./type\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\nexport const setRenderAudioRecorder = (html) => async (dispatch) => {\r\n  dispatch({ type: TOGGLE_RENDER_AUDIO_RECORDER });\r\n};\r\n\r\nexport const setHtmlString = (html) => async (dispatch) => {\r\n  dispatch({ type: SET_HTML_STRING, payload: html });\r\n};\r\nexport const reqAudioUrl = (audio) => async (dispatch) => {\r\n  let form = new FormData();\r\n  try {\r\n    form.append(\"audio\", audio, audio.name);\r\n    await API.post(\"upload/audio\", form).then((res) => {\r\n      dispatch({ type: SET_AUDIO_URL, payload: res.data });\r\n    });\r\n  } catch (err) {}\r\n};\r\n\r\nexport const reqImageUrl = (e) => async (dispatch) => {\r\n  let form = new FormData();\r\n  try {\r\n    form.append(\"image\", e, e.name);\r\n    let url = await API.post(`/upload`, form).then((res) => {\r\n      console.log(`Console.log  =>  ~ awaitAPI.post ~ res.data.url`, res.data.url);\r\n      dispatch({ type: SET_IMAGE_URL, payload: res.data.url });\r\n      return res.data.url;\r\n    });\r\n    console.log(`~~~~~~~~~~ url`, url);\r\n    return url;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const createComment = (htmlString, selectedQuestion, id, url) => async (dispatch) => {\r\n  console.log(`Console.log  =>  ~ createComment ~ id`, id);\r\n  console.log(`Console.log  =>  ~ createComment ~ htmlString`, htmlString);\r\n  console.log(`Console.log  =>  ~ createComment ~ selectedQuestion`, selectedQuestion);\r\n  //  this.props.createComment(this.props.htmlString, this.props.selectedQuestion);\r\n  try {\r\n    await API.post(\r\n      \"comments\",\r\n      {\r\n        comment: {\r\n          question_id: selectedQuestion.id,\r\n          answer: htmlString,\r\n          public_id: id,\r\n          audio_url: url,\r\n        },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      console.log(`Console.log  =>  ~ ).then ~ response`, response);\r\n      dispatch({ type: SEND_COMMENT, payload: response.data.object });\r\n    });\r\n  } catch (error) {\r\n    console.log(`Console.log  =>  ~ createComment ~ error`, error);\r\n  }\r\n};\r\n\r\nexport const getCommentsByPageNumber = (selectedQuestion, currentPageComment) => async (dispatch) => {\r\n  try {\r\n    await API.post(`questions/${selectedQuestion.id}/comments`, {\r\n      commentPage: currentPageComment,\r\n    }).then((response) => {\r\n      dispatch({ type: GET_COMMENTS_BY_PAGE_NUMBER, payload: response.data });\r\n    });\r\n  } catch (error) {\r\n    console.log(`Console.log  =>  ~ getCommentsByPageNumber ~ error`, error);\r\n  }\r\n};\r\n\r\nexport const deleteComment = (comment) => async (dispatch) => {\r\n  try {\r\n    await API.delete(`/comments/${comment.id}`, {\r\n      headers: { Authorization: token },\r\n    }).then((response) => {\r\n      dispatch({ type: DELETE_COMMENT, payload: response.data.object });\r\n    });\r\n  } catch (error) {\r\n    console.log(`Console.log  =>  ~ deleteComment ~ error`, error);\r\n  }\r\n};\r\n\r\nexport const updateComment = (payload) => async (dispatch) => {\r\n  try {\r\n    await API.put(\r\n      `/comments/${payload.commentId}`,\r\n      { answer: payload.answer },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      dispatch({ type: UPDATE_COMMENT, payload: response.data.object });\r\n    });\r\n  } catch (error) {\r\n    console.log(`Console.log  =>  ~ updateComment ~ error`, error);\r\n  }\r\n};\r\nexport const updateCommentToggle = (payload) => async (dispatch) => {\r\n  dispatch({ type: UPDATE_COMMENT_TOGGLE, payload: payload });\r\n};\r\n\r\nexport const voteComment = (selectedComment, user_id) => async (dispatch) => {\r\n  // todo VOTE COMMENT: questions/1/comments/18/vote   json => {vote: { comment_id: selectedComment.id }}\r\n  try {\r\n    await API.post(`/comments/${selectedComment.id}/vote`, null, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }).then(() => {\r\n      dispatch({\r\n        type: VOTE_COMMENT,\r\n        payload: { selectedComment, user_id },\r\n      });\r\n    });\r\n  } catch (error) {\r\n    console.log(`Console.log  =>  ~ voteComment ~ error`, error);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\nimport { updateQuestion } from \"../../../redux/actions/question\";\r\nimport { connect } from \"react-redux\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport MarkdownIt from \"markdown-it\";\r\n// import ReactMarkdown from \"react-markdown\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport HandleFullScreen from \"./plugins/HandleFullScreen\";\r\nimport { setHtmlString, reqImageUrl } from \"../../../redux/actions/commentAction\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./style.scss\";\r\nMdEditor.use(HandleFullScreen);\r\n\r\nexport const UpdateQuestion = (props) => {\r\n  const mdParser = new MarkdownIt(/* Markdown-it options */);\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm();\r\n\r\n  const onImageUpload = async (e, callback) => {\r\n    let url = await props.reqImageUrl(e);\r\n    console.log(\"url : \", url);\r\n    await callback(url);\r\n  };\r\n\r\n  const handleEditorChange = ({ html }) => {\r\n    props.setHtmlString(html);\r\n  };\r\n\r\n  const submitHandler = async (data) => {\r\n    const { selectedQuestion } = props;\r\n    const payload = {\r\n      id: selectedQuestion.id,\r\n      params: {\r\n        questions: {\r\n          title: data.title,\r\n          question: props.htmlString,\r\n        },\r\n      },\r\n      backFromSelectedQuestion: props.backFromSelectedQuestion,\r\n    };\r\n    console.log(`Console.log  =>  ~ submitHandler ~ payload`, payload);\r\n    props.updateQuestion(payload);\r\n    // props.backFromSelectedQuestion();\r\n  };\r\n  return (\r\n    <div id=\"updateQuestion\">\r\n      <div className=\"form-bg\">\r\n        <form className=\"form\" onSubmit={handleSubmit(submitHandler)}>\r\n          {/* <CreateQuestionForm /> */}\r\n          <h4>UPDATE YOUR QUESTION HERE!!!</h4>\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\">Update your Title!!!</label>{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Title\"\r\n              {...register(\"title\", { required: true, minLength: 7, maxLength: 150 })}\r\n            />\r\n            {errors.title?.type === \"required\" && \"Title is required\"}\r\n            {errors.title?.type === \"minLength\" && \"is too short (minimum characters: 7 )\"}\r\n            {errors.title?.type === \"maxLength\" && \"is too long (maximum characters: 150 )\"}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\">Update your Question details!!!</label>{\" \"}\r\n            <div style={{ height: \"22.5rem\", width: \"58.5rem\" }} className=\"mdEditor\">\r\n              <MdEditor\r\n                onImageUpload={onImageUpload}\r\n                renderHTML={(text) => mdParser.render(text)}\r\n                onChange={handleEditorChange}\r\n                style={{\r\n                  height: \"22.5rem\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn text-center btn-blue\">\r\n            UPDATE\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    imageUrl: state.question.imageUrl,\r\n    htmlString: state.question.htmlString,\r\n    selectedQuestion: state.question.selectedQuestion,\r\n    currentPageQuestion: state.question.currentPageQuestion,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  updateQuestion,\r\n  setHtmlString,\r\n  reqImageUrl,\r\n})(UpdateQuestion);\r\n","import * as React from \"react\";\r\nimport { PluginComponent } from \"react-markdown-editor-lite\";\r\n\r\nexport default class HandleFullScreen extends PluginComponent {\r\n  static pluginName = \"handle-full-screen\";\r\n  static align = \"left\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleFullScreen = this.handleFullScreen.bind(this);\r\n  }\r\n\r\n  handleFullScreen() {\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editor.on(\"fullscreen\", this.handleFullScreen);\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.editor.off(\"fullscreen\", this.handleFullScreen);\r\n  // }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport HandleFullScreen from \"./plugins/HandleFullScreen\";\r\n// import AudioPlugin from \"./plugins/AudioPlugin\";\r\nimport {\r\n  updateCommentToggle,\r\n  reqImageUrl,\r\n  setHtmlString,\r\n  updateComment,\r\n} from \"../../../../redux/actions/commentAction\";\r\nimport \"./updateComment.scss\";\r\n\r\n// MdEditor.use(AudioPlugin);\r\nMdEditor.use(HandleFullScreen);\r\n\r\nexport class UpdateComment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mdParser = new MarkdownIt(/* Markdown-it options */);\r\n    this.onImageUpload = this.onImageUpload.bind(this);\r\n    this.handleEditorChange = this.handleEditorChange.bind(this);\r\n  }\r\n  async onImageUpload(e, callback) {\r\n    await this.props.reqImageUrl(e);\r\n    await callback(this.props.imageUrl);\r\n  }\r\n\r\n  handleEditorChange({ html }) {\r\n    this.props.setHtmlString(html);\r\n  }\r\n  async submitHandler(event) {\r\n    event.preventDefault();\r\n    const payload = {\r\n      answer: this.props.htmlString,\r\n      commentId: this.props.selectedCommentId,\r\n    };\r\n    await this.props.updateComment(payload);\r\n    await this.props.updateCommentToggle(this.props.selectedCommentId);\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"updateComment\">\r\n        <div className=\"form-bg\">\r\n          <form className=\"form\" onSubmit={this.submitHandler.bind(this)}>\r\n            <div className=\"form-group\">\r\n              <label className=\"sr-only\">Question details</label>\r\n              <div style={{ height: \"400px\" }}>\r\n                <MdEditor\r\n                  onImageUpload={this.onImageUpload}\r\n                  renderHTML={(text) => this.mdParser.render(text)}\r\n                  onChange={this.handleEditorChange}\r\n                  style={{\r\n                    height: \"300px\",\r\n                  }}\r\n                  ref={this.mdEditor}\r\n                />\r\n                <hr />\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn text-center btn-blue\">\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    imageUrl: state.question.imageUrl,\r\n    htmlString: state.question.htmlString,\r\n    selectedQuestion: state.question.selectedQuestion,\r\n    currentPageComment: state.question.currentPageComment,\r\n    renderAudioRecorder: state.question.renderAudioRecorder,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  updateCommentToggle,\r\n  updateComment,\r\n  reqImageUrl,\r\n  setHtmlString,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateComment);\r\n","import * as React from \"react\";\r\nimport { PluginComponent } from \"react-markdown-editor-lite\";\r\n\r\nexport default class HandleFullScreen extends PluginComponent {\r\n  static pluginName = \"handle-full-screen\";\r\n  static align = \"left\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleFullScreen = this.handleFullScreen.bind(this);\r\n  }\r\n\r\n  handleFullScreen() {}\r\n\r\n  componentDidMount() {\r\n    this.editor.on(\"fullscreen\", this.handleFullScreen);\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.editor.off(\"fullscreen\", this.handleFullScreen);\r\n  // }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { PluginComponent } from \"react-markdown-editor-lite\";\r\nimport { connect } from \"react-redux\";\r\nimport { setRenderAudioRecorder } from \"../../../../redux/actions/commentAction\";\r\n\r\nexport class AudioPlugin extends PluginComponent {\r\n  static pluginName = \"audio-player-plugin\";\r\n  static align = \"left\";\r\n  static defaultConfig = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.setRenderAudioRecorder();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"button\" title=\"audio-player-plugin\" onClick={this.handleClick}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-mic-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\" />\r\n          <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\" />\r\n        </svg>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  renderAudioRecorder: state.question.renderAudioRecorder,\r\n});\r\n\r\nconst mapDispatchToProps = { setRenderAudioRecorder };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioPlugin);\r\n","import React, { Component } from \"react\";\r\nimport \"./recorder.scss\";\r\nimport AudioReactRecorder, { RecordState } from \"audio-react-recorder\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      recordState: null,\r\n    };\r\n  }\r\n  start = () => {\r\n    try {\r\n      console.log(`Console.log  =>  ~ App ~ try`);\r\n      this.setState({\r\n        recordState: RecordState.START,\r\n      });\r\n    } catch (error) {\r\n      console.log(`Console.log  =>  ~ App ~ error`, error);\r\n    }\r\n  };\r\n  stop = () => {\r\n    this.setState({\r\n      recordState: RecordState.STOP,\r\n    });\r\n  };\r\n  //audioData contains blob and blobUrl\r\n  async onStop(audioData) {\r\n    await this.props.reqAudioUrl(audioData.blob);\r\n  }\r\n  render() {\r\n    const { recordState } = this.state;\r\n\r\n    return (\r\n      <div id=\"recorder\">\r\n        <AudioReactRecorder state={recordState} onStop={this.onStop.bind(this)} />\r\n\r\n        <button type=\"button\" onClick={this.start} className=\"recorder-btn rounded\">\r\n          Start\r\n        </button>\r\n        <button type=\"button\" onClick={this.stop} className=\"recorder-btn rounded ms-3\">\r\n          Stop\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// 'use strict';\r\nimport React from \"react\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport MarkdownIt from \"markdown-it\";\r\n// import ReactMarkdown from \"react-markdown\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport HandleFullScreen from \"./plugins/HandleFullScreen\";\r\nimport AudioPlugin from \"./plugins/AudioPlugin\";\r\nimport { reqImageUrl, createComment, setHtmlString, getCommentsByPageNumber, reqAudioUrl } from \"../../../redux/actions/commentAction\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./commentList.scss\";\r\nimport Recorder from \"./Recorder/index\";\r\nimport \"react-voice-recorder/dist/index.css\";\r\nMdEditor.use(AudioPlugin);\r\nMdEditor.use(HandleFullScreen);\r\n\r\n// * ---------------- CLASS\r\nexport class CommentEditor extends React.Component {\r\n  mdParser = null;\r\n  constructor(props) {\r\n    super(props);\r\n    this.mdParser = new MarkdownIt(/* Markdown-it options */);\r\n    this.onImageUpload = this.onImageUpload.bind(this);\r\n    this.handleEditorChange = this.handleEditorChange.bind(this);\r\n  }\r\n\r\n  async onImageUpload(e, callback) {\r\n    await this.props.reqImageUrl(e);\r\n    await callback(this.props.imageUrl);\r\n  }\r\n\r\n  handleEditorChange({ html }) {\r\n    this.props.setHtmlString(html);\r\n  }\r\n  async postComment(e) {\r\n    e.preventDefault();\r\n\r\n    await this.props.createComment(this.props.htmlString, this.props.selectedQuestion, this.props.audioId, this.props.audioUrl);\r\n    await this.props.getCommentsByPageNumber(this.props.selectedQuestion, this.props.currentPageComment);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"createComment\">\r\n        <div className=\"form-bg\">\r\n          <form className=\"form\" onSubmit={this.postComment.bind(this)}>\r\n            <div className=\"form-group\">\r\n              {/* <label className=\"sr-only\">Question details</label> */}\r\n              <div style={{ height: \"400px\" }}>\r\n                <MdEditor\r\n                  onImageUpload={this.onImageUpload}\r\n                  renderHTML={(text) => this.mdParser.render(text)}\r\n                  onChange={this.handleEditorChange}\r\n                  style={{\r\n                    height: \"400px\",\r\n                  }}\r\n                  ref={this.mdEditor}\r\n                />\r\n              </div>\r\n            </div>\r\n            {this.props.renderAudioRecorder && <Recorder reqAudioUrl={this.props.reqAudioUrl} />}\r\n            {this.props.audioUrl && (\r\n              <audio controls>\r\n                <source src={this.props.audioUrl} type=\"audio/ogg\" />\r\n                Your browser does not support the audio element.\r\n              </audio>\r\n            )}\r\n            <button className=\"btn btn-lg mt-3 comment-post-btn\" type=\"submit\">\r\n              Post\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    imageUrl: state.question.imageUrl,\r\n    htmlString: state.question.htmlString,\r\n    selectedQuestion: state.question.selectedQuestion,\r\n    currentPageComment: state.question.currentPageComment,\r\n    renderAudioRecorder: state.question.renderAudioRecorder,\r\n    audioUrl: state.question.audioUrl,\r\n    audioId: state.question.audioId,\r\n  };\r\n};\r\n// selectedQuestion, ;\r\n\r\nconst mapDispatchToProps = {\r\n  reqImageUrl,\r\n  setHtmlString,\r\n  createComment,\r\n  getCommentsByPageNumber,\r\n  reqAudioUrl,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentEditor);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UpdateComment from \"./UpdateComment/index\";\r\nimport {\r\n  getCommentsByPageNumber,\r\n  voteComment,\r\n  createComment,\r\n  deleteComment,\r\n  updateComment,\r\n  updateCommentToggle,\r\n} from \"../../../redux/actions/commentAction\";\r\nimport CommentEditor from \"./CommentEditor\";\r\n\r\nexport class CommentList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  async componentWillMount() {\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n\r\n  async createCommentAsync(event) {\r\n    event.preventDefault();\r\n    // event.target.myFile.value\r\n    console.log(`Logged Output ~ event`, event);\r\n    console.log(`Logged Output ~ event.target.myFile.value`, event.target.myFile.value);\r\n    // await this.props.createComment(this.props.selectedQuestion, event.target.answer.value);\r\n    // await this.props.getCommentsByPageNumber(\r\n    //   this.props.selectedQuestion,\r\n    //   this.props.currentPageComment\r\n    // );\r\n  }\r\n  async voteCommentAsync(comment) {\r\n    await this.props.voteComment(\r\n      comment,\r\n      this.props.user_id,\r\n      this.props.getCommentsByPageNumber\r\n    );\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n  async deleteCommentAsync(comment) {\r\n    await this.props.deleteComment(comment);\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n  async updateCommentAsync(event) {\r\n    // await this.props.updateComment(comment);\r\n    // await this.props.getCommentsByPageNumber(\r\n    //   this.props.selectedQuestion,\r\n    //   this.props.currentPageComment\r\n    // );\r\n  }\r\n  render() {\r\n    let pageNum = [];\r\n    for (let i = 1; i <= this.props.maxPageComment; i++) {\r\n      pageNum.push(i);\r\n    }\r\n    const { getCommentsByPageNumber, comments, updateCommentToggle } = this.props;\r\n    let {\r\n      currentPageComment,\r\n      maxPageComment,\r\n      selectedQuestion,\r\n      user_id,\r\n      selectedCommentId,\r\n    } = this.props;\r\n    user_id *= 1;\r\n    return (\r\n      <div>\r\n        {/* //* Create COMMENT */}\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css\"\r\n          type=\"text/css\"\r\n        />\r\n        {/* //* Create COMMENT */}\r\n        <CommentEditor />\r\n        {/* //* Comment LIST */}\r\n        <div>\r\n          {comments.length > 0 ? (\r\n            <div className=\"ms-3 me-3\">\r\n              <div>\r\n                <hr />\r\n              </div>\r\n              <h4 className=\"mt-5\">\r\n                <b>Comments:</b>\r\n              </h4>\r\n            </div>\r\n          ) : (\r\n            <div className=\"ms-3 me-3\">\r\n              <div>\r\n                <hr />\r\n              </div>\r\n              <div className=\"align-items-center\">\r\n                <h4 className=\"mt-5\">\r\n                  <b>Comments:</b>\r\n                </h4>\r\n                <div className=\"card mt-3 rounded\">\r\n                  <div className=\"card-body text-secondary\">\r\n                    Nothing to show. Please check back for updates.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {comments &&\r\n            comments.length > 0 &&\r\n            comments.map((comment, idx) => (\r\n              <div className=\"card mb-4 ms-3 me-3\" key={idx}>\r\n                <div className=\"card-group shadow p-5 m-3 border rounded\">\r\n                  {/* //* Comment -> VOTE, count && user name, profile */}\r\n                  <div className=\"col-sm-1\">\r\n                    <div className=\"card text-center\">\r\n                      <div className=\"card-body\">\r\n                        <div className=\"card-text\">\r\n                          <span>{comment.votes.length} </span>\r\n                          {comment.votes.length >= 2 ? \"votes\" : \"vote\"}\r\n                          <div>\r\n                            {/* //* VOTE Comment */}\r\n                            {!comment.votes.includes(user_id) ? (\r\n                              <div>\r\n                                <button\r\n                                  className=\"btn c-vote-btn\"\r\n                                  onClick={() => {\r\n                                    this.voteCommentAsync.bind(this)(comment);\r\n                                  }}\r\n                                >\r\n                                  <i className=\"fa fa-heart-o\"></i>\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              <button\r\n                                className=\"btn c-vote-btn\"\r\n                                onClick={() => {\r\n                                  this.voteCommentAsync.bind(this)(comment);\r\n                                }}\r\n                              >\r\n                                <i className=\"fa fa-heart\"></i>\r\n                              </button>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-9\">\r\n                    {/* //* Comment -> Answer  & audio */}\r\n                    <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                        <div\r\n                          className=\"comment\"\r\n                          dangerouslySetInnerHTML={{ __html: comment.answer }}\r\n                        ></div>\r\n                        {comment.audio_url && (\r\n                          <audio controls>\r\n                            <source src={comment.audio_url} type=\"audio/ogg\" />\r\n                            Your browser does not support the audio element.\r\n                          </audio>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <div className=\"card align-items-end\">\r\n                      {/* //* Comment -> Delete, Update -> buttons */}\r\n                      {comment.user.id === user_id && (\r\n                        <div>\r\n                          <div className=\"row\">\r\n                            <button\r\n                              className=\"rounded btn shadow\"\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                this.deleteCommentAsync.bind(this)(comment);\r\n                              }}\r\n                            >\r\n                              Delete\r\n                            </button>{\" \"}\r\n                          </div>\r\n                          <br />\r\n                          <div className=\"row\">\r\n                            {\" \"}\r\n                            <button\r\n                              className=\"rounded btn shadow\"\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                updateCommentToggle(comment.id);\r\n                              }}\r\n                            >\r\n                              Update\r\n                            </button>{\" \"}\r\n                            <div className=\"d-flex\">\r\n                              {selectedCommentId === comment.id ? (\r\n                                <UpdateComment selectedCommentId={selectedCommentId} />\r\n                              ) : null}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        {/* //* comment PAGINATION - prev, next buttons  222222222222222 */}\r\n        {comments.length > 0 ? (\r\n          <nav aria-label=\"Page navigation example\">\r\n            <div>\r\n              <ul className=\"pagination justify-content-center\">\r\n                {currentPageComment >= 2 ? (\r\n                  <li className=\"page-item\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn pg-button\"\r\n                      onClick={() =>\r\n                        getCommentsByPageNumber(\r\n                          this.props.selectedQuestion,\r\n                          --currentPageComment\r\n                        )\r\n                      }\r\n                    >\r\n                      <span aria-hidden=\"true\"><b>&laquo;</b></span>\r\n                    </button>{\" \"}\r\n                  </li>\r\n                ) : (\r\n                  <button className=\"btn\" disabled>\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                  </button>\r\n                )}\r\n\r\n                {pageNum &&\r\n                  pageNum.length > 0 &&\r\n                  pageNum.map((number, idx) => (\r\n                    <li key={idx} className=\"page-item\">\r\n                      <button\r\n                        className=\"page-link pg-button rounded\"\r\n                        onClick={() => {\r\n                          getCommentsByPageNumber(this.props.selectedQuestion, number);\r\n                        }}\r\n                      >\r\n                        {number}\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                {currentPageComment >= maxPageComment ? (\r\n                  <button type=\"button\" className=\"btn\" disabled>\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                  </button>\r\n                ) : (\r\n                  <li className=\"page-item\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn pg-button\"\r\n                      onClick={() =>\r\n                        getCommentsByPageNumber(\r\n                          this.props.selectedQuestion,\r\n                          ++currentPageComment\r\n                        )\r\n                      }\r\n                    >\r\n                      <span aria-hidden=\"true\">&raquo;</span>\r\n                    </button>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    comments: state.question.comments,\r\n    maxPageComment: state.question.maxPageComment,\r\n    currentPageComment: state.question.currentPageComment,\r\n    selectedCommentId: state.question.selectedCommentId,\r\n    audioUrl: state.question.audioUrl,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = {\r\n  getCommentsByPageNumber,\r\n  voteComment,\r\n  createComment,\r\n  deleteComment,\r\n  updateComment,\r\n  updateCommentToggle,\r\n};\r\n// ;\r\nconst Container = connect(mapStateToProps, mapDispatchToProps)(CommentList);\r\nexport default Container;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCommentsByPageNumber,\r\n  voteComment,\r\n  createComment,\r\n  deleteComment,\r\n  updateComment,\r\n  updateCommentToggle,\r\n} from \"../../redux/actions/commentAction\";\r\n\r\nexport class CommentList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  async componentWillMount() {\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n\r\n  async createCommentAsync(event) {\r\n    event.preventDefault();\r\n    // event.target.myFile.value\r\n    console.log(`Logged Output ~ event`, event);\r\n    console.log(`Logged Output ~ event.target.myFile.value`, event.target.myFile.value);\r\n    // await this.props.createComment(this.props.selectedQuestion, event.target.answer.value);\r\n    // await this.props.getCommentsByPageNumber(\r\n    //   this.props.selectedQuestion,\r\n    //   this.props.currentPageComment\r\n    // );\r\n  }\r\n  async deleteCommentAsync(comment) {\r\n    await this.props.deleteComment(comment);\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n  async updateCommentAsync(event) {\r\n    // await this.props.updateComment(comment);\r\n    // await this.props.getCommentsByPageNumber(\r\n    //   this.props.selectedQuestion,\r\n    //   this.props.currentPageComment\r\n    // );\r\n  }\r\n  render() {\r\n    let pageNum = [];\r\n    for (let i = 1; i <= this.props.maxPageComment; i++) {\r\n      pageNum.push(i);\r\n    }\r\n    const { getCommentsByPageNumber, comments, updateCommentToggle } = this.props;\r\n    let {\r\n      currentPageComment,\r\n      maxPageComment,\r\n      selectedQuestion,\r\n      selectedCommentId,\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        {/* //* Create COMMENT */}\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css\"\r\n          type=\"text/css\"\r\n        />\r\n        {/* //* Comment LIST */}\r\n        <div>\r\n          {comments.length > 0 ? (\r\n            <div className=\"ms-3 me-3\">\r\n              <div>\r\n                <hr />\r\n              </div>\r\n              <h4 className=\"mt-5\">\r\n                <b>Comments:</b>\r\n              </h4>\r\n            </div>\r\n          ) : (\r\n            <div className=\"ms-3 me-3\">\r\n              <div>\r\n                <hr />\r\n              </div>\r\n              <div className=\"align-items-center\">\r\n                <h4 className=\"mt-5\">\r\n                  <b>Comments:</b>\r\n                </h4>\r\n                <div className=\"card mt-3 rounded\">\r\n                  <div className=\"card-body text-secondary\">\r\n                    Nothing to show. Please check back for updates.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {comments &&\r\n            comments.length > 0 &&\r\n            comments.map((comment, idx) => (\r\n              <div className=\"card mb-4 ms-3 me-3\" key={idx}>\r\n                <div className=\"card-group shadow p-5 m-3 border rounded\">\r\n                  {/* //* Comment -> VOTE, count && user name, profile */}\r\n                  <div className=\"col-sm-1\">\r\n                    <div className=\"card text-center\">\r\n                      <div className=\"card-body\">\r\n                        <div className=\"card-text\">\r\n                          <span>{comment.votes.length} </span>\r\n                          {comment.votes.length >= 2 ? \"votes\" : \"vote\"}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-9\">\r\n                    {/* //* Comment -> Answer  & audio */}\r\n                    <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                        <div\r\n                          className=\"comment\"\r\n                          dangerouslySetInnerHTML={{ __html: comment.answer }}\r\n                        ></div>\r\n                        {comment.audio_url && (\r\n                          <audio controls>\r\n                            <source src={comment.audio_url} type=\"audio/ogg\" />\r\n                            Your browser does not support the audio element.\r\n                          </audio>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        {/* //* comment PAGINATION - prev, next buttons  222222222222222 */}\r\n        {comments.length > 0 ? (\r\n          <nav aria-label=\"Page navigation example\">\r\n            <div>\r\n              <ul className=\"pagination justify-content-center\">\r\n                {currentPageComment >= 2 ? (\r\n                  <li className=\"page-item\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn pg-button\"\r\n                      onClick={() =>\r\n                        getCommentsByPageNumber(\r\n                          this.props.selectedQuestion,\r\n                          --currentPageComment\r\n                        )\r\n                      }\r\n                    >\r\n                      <span aria-hidden=\"true\"><b>&laquo;</b></span>\r\n                    </button>{\" \"}\r\n                  </li>\r\n                ) : (\r\n                  <button className=\"btn\" disabled>\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                  </button>\r\n                )}\r\n\r\n                {pageNum &&\r\n                  pageNum.length > 0 &&\r\n                  pageNum.map((number, idx) => (\r\n                    <li key={idx} className=\"page-item\">\r\n                      <button\r\n                        className=\"page-link pg-button rounded\"\r\n                        onClick={() => {\r\n                          getCommentsByPageNumber(this.props.selectedQuestion, number);\r\n                        }}\r\n                      >\r\n                        {number}\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                {currentPageComment >= maxPageComment ? (\r\n                  <button type=\"button\" className=\"btn\" disabled>\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                  </button>\r\n                ) : (\r\n                  <li className=\"page-item\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn pg-button\"\r\n                      onClick={() =>\r\n                        getCommentsByPageNumber(\r\n                          this.props.selectedQuestion,\r\n                          ++currentPageComment\r\n                        )\r\n                      }\r\n                    >\r\n                      <span aria-hidden=\"true\">&raquo;</span>\r\n                    </button>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    comments: state.question.comments,\r\n    maxPageComment: state.question.maxPageComment,\r\n    currentPageComment: state.question.currentPageComment,\r\n    selectedCommentId: state.question.selectedCommentId,\r\n    audioUrl: state.question.audioUrl,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = {\r\n  getCommentsByPageNumber,\r\n  voteComment,\r\n  createComment,\r\n  deleteComment,\r\n  updateComment,\r\n  updateCommentToggle,\r\n};\r\n// ;\r\nconst Container = connect(mapStateToProps, mapDispatchToProps)(CommentList);\r\nexport default Container;\r\n","import React from \"react\";\r\nimport UpdateQuestion from \"../Home/UpdateQuestion\";\r\nimport CommentList from \"../Home/CommentList\";\r\nimport LoginCommentList from \"./LoginCommentList\";\r\n\r\nexport default function QuestionDetails(props) {\r\n  const {\r\n    selectedQuestion,\r\n    deleteSelectedQuestion,\r\n    updateQuestionToggle,\r\n    renderUpdateQuestion,\r\n    asyncVoteSelectedQuestion,\r\n  } = props;\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"card mt-5 ms-5 me-5\">\r\n        <div className=\"card-body\">\r\n          <h3 className=\"card-title\">\r\n            <b>{selectedQuestion.title}</b>\r\n          </h3>\r\n          <div className=\"card-text row align-items-center\">\r\n            <div className=\"col-auto\">\r\n              <span className=\"text-secondary\">{selectedQuestion.votes.length} </span>\r\n              <span className=\"text-secondary\">\r\n                {selectedQuestion.votes.length >= 2 ? \"votes\" : \"vote\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      {/* //* Question Detail Body */}\r\n      <div className=\"card ms-5 me-5\">\r\n        <div\r\n          className=\"comment card-body\"\r\n          dangerouslySetInnerHTML={{ __html: selectedQuestion.question }}\r\n        ></div>\r\n      </div>\r\n      {/*  aa */}\r\n      <div className=\"ms-5 me-5 mt-5\">\r\n        <div className=\"mt-3\">\r\n          <LoginCommentList selectedQuestion={selectedQuestion} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./login.scss\";\r\nimport \"../Home/home.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser, signupUser } from \"../../redux/actions/authentication\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SignUp from \"./SignUp\";\r\nimport QuestionPagination from \"../Home/QuestionPagination\";\r\nimport LoginQuestionList from \"./LoginQuestionList\";\r\nimport LoginQuestionDetails from \"./LoginQuestionDetails\";\r\nimport {\r\n  getQuestionsByPageNumber,\r\n  setSelectedQuestion,\r\n  backFromSelectedQuestion,\r\n  createQuestionToggle,\r\n  createProfileToggle,\r\n  deleteSelectedQuestion,\r\n  updateQuestionToggle,\r\n  voteSelectedQuestion,\r\n  searchQuestion,\r\n  updateQuestion,\r\n  getBackFromEditProfile,\r\n} from \"../../redux/actions/question\";\r\n\r\nexport function Login(props) {\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  if (!mounted) {\r\n    props.getQuestionsByPageNumber(props.currentPageQuestion);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    watch,\r\n  } = useForm();\r\n  console.log(watch());\r\n  console.log(`Console.log  =>  ~ Login ~ errors`, errors);\r\n  const loginSubmit = (data) => {\r\n    console.log(`Console.log  =>  ~ loginSubmit ~ loginSubmit`);\r\n    const payload = {\r\n      email: data.email,\r\n      password: data.password,\r\n    };\r\n    props.loginUser(payload);\r\n  };\r\n\r\n  const handleSubmitSignUp = (data) => {\r\n    const payload = {\r\n      user: {\r\n        username: data.username,\r\n        email: data.email,\r\n        password: data.password,\r\n      },\r\n    };\r\n\r\n    if (props.signupUser(payload)) console.log(\"sign up success\");\r\n    else console.log(\"sign up failed\");\r\n  };\r\n  const {\r\n    questions,\r\n    logoutUser,\r\n    backFromSelectedQuestion,\r\n    deleteSelectedQuestion,\r\n    updateQuestionToggle,\r\n    renderUpdateQuestion,\r\n    getQuestionsByPageNumber,\r\n  } = props;\r\n\r\n  let { selectedQuestion, maxPageQuestion, currentPageQuestion } = props;\r\n  console.log(questions);\r\n  return (\r\n    <div id=\"login\">\r\n      <div className=\"dropdown\">\r\n        <nav className=\"navbar navbar-expand-lg py-4 shadow rounded navbar-light bg-light\">\r\n          {/* LOGO */}\r\n          <button\r\n            className=\"navbar-brand btn ms-3\"\r\n            onClick={() => {\r\n              backFromSelectedQuestion();\r\n              getQuestionsByPageNumber(1);\r\n            }}\r\n            id=\"logo\"\r\n          >\r\n            <img src=\"./logo192.png\" alt=\"Logo\" width=\"50\" height=\"50\" />\r\n          </button>\r\n          <p className=\"text-secondary navbar-brand mt-3\">Log in to do more</p>\r\n          <div className=\"ms-auto\">\r\n            {/* ---------------LOG-IN-------------- */}\r\n            <button\r\n              className=\"navbar-brand btn log-btn rounded\"\r\n              id=\"logInDropdown\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Log In\r\n            </button>\r\n            <div className=\"dropdown-menu dropdown-menu-lg-end\" aria-labelledby=\"logInDropdown\">\r\n              <button className=\"btn dropdown-header\">\r\n                <form className=\"form\" onSubmit={handleSubmit(loginSubmit)}>\r\n                  <h4 className=\"form__title\">Log In</h4>\r\n                  {/* ---------------Email------------- */}\r\n                  <div className=\"form_div\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form__input\"\r\n                      placeholder=\" \"\r\n                      {...register(\"email\", { required: true, pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/ })}\r\n                    />\r\n                    <label className=\"form__label\">Email</label>\r\n                  </div>\r\n                  {errors.email?.type === \"required\" && <span>Email is required</span>}\r\n                  {errors.email?.type === \"pattern\" && <span>Email pattern is wrong.</span>}\r\n                  {/* ---------------Password--------------- */}\r\n                  <div className=\"form_div\">\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form__input\"\r\n                      placeholder=\" \"\r\n                      {...register(\"password\", { required: true, minLength: 6, maxLength: 30 })}\r\n                    />\r\n                    <label className=\"form__label\">Password</label>\r\n                  </div>\r\n                  {errors.password?.type === \"required\" && <span>password is required.</span>}\r\n                  {errors.password?.type === \"minLength\" && <span>password minLength is 7</span>}\r\n                  {errors.password?.type === \"maxLength\" && <span>password maxLength is 30</span>}\r\n                  {/* ---------------SUBMIT--------------- */}\r\n                  <input type=\"submit\" className=\"form__button mb-3\" value=\"Login\" />\r\n                </form>\r\n              </button>\r\n            </div>\r\n\r\n            {/* ---------------SIGN-UP-------------- */}\r\n            <button\r\n              className=\"navbar-brand btn log-btn rounded\"\r\n              id=\"signUpDropdown\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Sign Up\r\n            </button>\r\n            <div className=\"dropdown-menu dropdown-menu-lg-end\" aria-labelledby=\"signUpDropdown\">\r\n              <button className=\"btn dropdown-header\">\r\n                <SignUp />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n      {selectedQuestion ? (\r\n        <LoginQuestionDetails\r\n          selectedQuestion={selectedQuestion}\r\n          deleteSelectedQuestion={deleteSelectedQuestion}\r\n          updateQuestionToggle={updateQuestionToggle}\r\n          renderUpdateQuestion={renderUpdateQuestion}\r\n          // asyncVoteSelectedQuestion={asyncVoteSelectedQuestion}\r\n        />\r\n      ) : (\r\n        <LoginQuestionList\r\n          questions={questions}\r\n          // asyncVoteSelectedQuestion={asyncVoteSelectedQuestion}\r\n          setSelectedQuestion={props.setSelectedQuestion}\r\n        />\r\n      )}\r\n      {/*  ----------Pagination---------------- */}\r\n      {!selectedQuestion && (\r\n        <QuestionPagination\r\n          currentPageQuestion={currentPageQuestion}\r\n          getQuestionsByPageNumber={getQuestionsByPageNumber}\r\n          maxPageQuestion={maxPageQuestion}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    questions: state.question.questions,\r\n    selectedQuestion: state.question.selectedQuestion,\r\n    renderCreateQuestion: state.question.renderCreateQuestion,\r\n    renderProfile: state.question.renderProfile,\r\n    user: state.auth.user,\r\n    renderUpdateQuestion: state.question.renderUpdateQuestion,\r\n    maxPageQuestion: state.question.maxPageQuestion,\r\n    currentPageQuestion: state.question.currentPageQuestion,\r\n    searchValue: state.question.searchValue,\r\n    renderOrderButton: state.question.renderOrderButton,\r\n  };\r\n};\r\n\r\nconst Container = connect(mapStateToProps, {\r\n  loginUser,\r\n  signupUser,\r\n  getQuestionsByPageNumber,\r\n  setSelectedQuestion,\r\n  backFromSelectedQuestion,\r\n  createQuestionToggle,\r\n  createProfileToggle,\r\n  deleteSelectedQuestion,\r\n  updateQuestionToggle,\r\n  voteSelectedQuestion,\r\n  searchQuestion,\r\n  updateQuestion,\r\n  getBackFromEditProfile,\r\n})(Login);\r\n\r\nexport default Container;\r\n","import * as React from \"react\";\r\nimport { PluginComponent } from \"react-markdown-editor-lite\";\r\n\r\nexport default class HandleFullScreen extends PluginComponent {\r\n  static pluginName = \"handle-full-screen\";\r\n  static align = \"left\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleFullScreen = this.handleFullScreen.bind(this);\r\n  }\r\n\r\n  handleFullScreen() {}\r\n\r\n  componentDidMount() {\r\n    this.editor.on(\"fullscreen\", this.handleFullScreen);\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.editor.off(\"fullscreen\", this.handleFullScreen);\r\n  // }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","// 'use strict';\r\nimport React from \"react\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport MarkdownIt from \"markdown-it\";\r\n// import ReactMarkdown from \"react-markdown\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport HandleFullScreen from \"./plugins/HandleFullScreen\";\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport \"./style.scss\";\r\nimport { createQuestion, getQuestionsByPageNumber } from \"../../../redux/actions/question\";\r\nimport { setHtmlString, reqImageUrl } from \"../../../redux/actions/commentAction\";\r\nMdEditor.use(HandleFullScreen);\r\n\r\nexport const QuestionEditor = (props) => {\r\n  const { backFromSelectedQuestion, blurBackground } = props;\r\n  const mdParser = new MarkdownIt(/* Markdown-it options */);\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm();\r\n\r\n  const onImageUpload = async (e, callback) => {\r\n    let url = await props.reqImageUrl(e);\r\n    await callback(url);\r\n  };\r\n\r\n  const handleEditorChange = ({ html }) => {\r\n    props.setHtmlString(html);\r\n  };\r\n\r\n  const submitHandler = async (data) => {\r\n    const payload = {\r\n      questions: {\r\n        title: data.title,\r\n        question: props.htmlString,\r\n      },\r\n    };\r\n    await props.createQuestion(payload);\r\n    await props.getQuestionsByPageNumber(props.currentPageQuestion);\r\n    const divTC = document.getElementById(\"blur\");\r\n    divTC.classList.toggle(\"big-container\");\r\n  };\r\n  return (\r\n    <div id=\"createQuestion\">\r\n      <div className=\"form-bg\">\r\n        <form className=\"form\" onSubmit={handleSubmit(submitHandler)}>\r\n          <div className=\"card align-items-end mb-3\">\r\n            <button className=\"btn-sm  x-btn\"\r\n                    onClick={() => {\r\n                      blurBackground();\r\n                      backFromSelectedQuestion();\r\n                    }}>\r\n              <i className=\"fa fa-times-circle\"></i>\r\n            </button>\r\n          </div>\r\n          {/* <CreateQuestionForm /> */}\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\">Title</label>{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Title\"\r\n              {...register(\"title\", { required: true, minLength: 7, maxLength: 150 })}\r\n            />\r\n            {errors.title?.type === \"required\" && \"Title is required\"}\r\n            {errors.title?.type === \"minLength\" && \"is too short (minimum characters: 7 )\"}\r\n            {errors.title?.type === \"maxLength\" && \"is too long (maximum characters: 150 )\"}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\">Question details</label>\r\n            <div style={{ height: \"400px\" }} className=\"mdEditor\">\r\n              <MdEditor\r\n                onImageUpload={onImageUpload}\r\n                renderHTML={(text) => mdParser.render(text)}\r\n                onChange={handleEditorChange}\r\n                style={{ height: \"400px\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-sm text-center btn-blue\">\r\n            Post Question\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  const { imageUrl, htmlString, selectedQuestion, currentPageQuestion, questions } = state.question;\r\n  return {\r\n    imageUrl: imageUrl,\r\n    htmlString: htmlString,\r\n    selectedQuestion: selectedQuestion,\r\n    currentPageQuestion: currentPageQuestion,\r\n    questions: questions,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  setHtmlString,\r\n  reqImageUrl,\r\n  createQuestion,\r\n  getQuestionsByPageNumber,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionEditor);\r\n","import React from \"react\";\r\nimport \"./profile.scss\";\r\n\r\nexport default function Profile(props) {\r\n    const {\r\n        user_name, \r\n        user_bio,\r\n        user_email,\r\n        user_photo,\r\n        blurBackground,\r\n        getBackFromEditProfile,\r\n    } = props;     \r\n    return(\r\n        <div id=\"createProfile\" className=\"container-fluid rounded shadow-lg\">\r\n            <div>\r\n                <div className=\"card ms-4 align-items-end\">\r\n                    <button className=\"btn btn-lg card-item x-btn\"\r\n                            onClick={() => {\r\n                                blurBackground();\r\n                                getBackFromEditProfile()\r\n                            }}>\r\n                        <i className=\"fa fa-times-circle\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-group mt-5\">\r\n                <div className=\"profile-image\">\r\n                    <div className=\"card me-5 ms-5\">\r\n                        <img src={user_photo}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-item\">\r\n                            <div>\r\n                                <p><b>Username:</b></p>\r\n                                <p className=\"text-secondary\">{user_name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"card-item\">\r\n                            <div>\r\n                                <p><b>Email:</b></p>\r\n                                <p className=\"text-secondary\">{user_email}</p>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"card-item\">\r\n                            {user_bio == \"null\" ? (\r\n                                <div>\r\n                                    <p><b>Bio:</b></p>\r\n                                    <p className=\"text-secondary\">Nothing to show.</p>\r\n                                </div>\r\n                            ): (<p><b>Bio: {user_bio}</b></p>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Navigation(props) {\r\n  const {\r\n    backFromSelectedQuestion,\r\n    getQuestionsByPageNumber,\r\n    searchSubmitHandler,\r\n    createProfileToggle,\r\n    blurBackground,\r\n    logoutUser,\r\n    user_name,\r\n    user_photo,\r\n  } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg py-4 shadow rounded navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        {/* LOGO */}\r\n        <button\r\n          className=\"navbar-brand btn me-0\"\r\n          onClick={() => {\r\n            backFromSelectedQuestion();\r\n            getQuestionsByPageNumber(1);\r\n          }}\r\n          id=\"logo\"\r\n        >\r\n          <img src=\"https://svgsilh.com/svg_v2/341059.svg\" alt=\"Logo\" width=\"50\" height=\"50\" />\r\n        </button>\r\n        {/* NAVBAR TOGGLER IN MOBILE -> BUTTON */}\r\n        <p className=\"navbar-brand mt-3 me-5 ms-0\">SOLVER-Q</p>\r\n        <button\r\n          className=\"navbar-toggler toggler-btn\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <br />\r\n          {/*//*-----Search BAR------ */}\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <form className=\"d-flex form-horizontal\" onSubmit={searchSubmitHandler}>\r\n                <input className=\"form-control\" type=\"text\" placeholder=\"Search...\" aria-label=\"Search\" name=\"searchValue\" />\r\n                <input type=\"hidden\" name=\"order\" value={1} />\r\n                <button className=\"btn btn-sm search-btn\" type=\"submit\">\r\n                  <i className=\"fa fa-search\"></i>\r\n                </button>\r\n              </form>\r\n            </li>\r\n          </ul>\r\n          <br />\r\n          {/* PROFILE -> DROPDOWN BUTTON */}\r\n          <ul className=\"navbar-nav ms-auto\">\r\n            <li className=\"nav-item dropdown\">\r\n              <button\r\n                className=\"navbar-brand btn dropdown-toggle profile rounded\"\r\n                id=\"navbarDropdownMenu\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <img src={user_photo} width=\"50px\" height=\"50px\" />\r\n              </button>\r\n              <div className=\"dropdown-menu dropdown-menu-lg-end\" aria-labelledby=\"navbarDropdownMenu\">\r\n                <p className=\"dropdown-header text-dark\">\r\n                  <b>{user_name}</b>\r\n                </p>\r\n                <button\r\n                  className=\"btn dropdown-item\"\r\n                  onClick={() => {\r\n                    createProfileToggle();\r\n                    blurBackground();\r\n                  }}\r\n                >\r\n                  Profile\r\n                </button>\r\n                <button\r\n                  className=\"btn dropdown-item\"\r\n                  onClick={() => {\r\n                    logoutUser();\r\n                  }}\r\n                >\r\n                  Log Out\r\n                </button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavigation.propTypes = {};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport UpdateQuestion from \"../UpdateQuestion\";\r\nimport CommentList from \"../CommentList\";\r\n\r\nexport default function QuestionDetails(props) {\r\n  const {\r\n    selectedQuestion,\r\n    user_id,\r\n    deleteSelectedQuestion,\r\n    updateQuestionToggle,\r\n    renderUpdateQuestion,\r\n    asyncVoteSelectedQuestion,\r\n  } = props;\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"card mt-5 ms-5 me-5\">\r\n        <div className=\"card-body\">\r\n          <h3 className=\"card-title\">\r\n            <b>{selectedQuestion.title}</b>\r\n          </h3>\r\n          <div className=\"card-text row align-items-center\">\r\n            <div className=\"col-auto\">\r\n              <span className=\"text-secondary\">{selectedQuestion.votes.length} </span>\r\n              <span className=\"text-secondary\">\r\n                {selectedQuestion.votes.length >= 2 ? \"votes\" : \"vote\"}\r\n              </span>\r\n            </div>\r\n            {selectedQuestion.user.id == user_id ? (\r\n              <div className=\"col-auto\">\r\n                {/* //* DELETE, UPDATE QUESTION BUTTON */}\r\n                <button\r\n                  className=\"btn q-del-up\"\r\n                  onClick={() => {\r\n                    deleteSelectedQuestion(selectedQuestion);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button\r\n                  className=\"btn q-del-up\"\r\n                  onClick={() => {\r\n                    updateQuestionToggle();\r\n                  }}\r\n                >\r\n                  Update\r\n                </button>\r\n                {renderUpdateQuestion ? <UpdateQuestion /> : null}\r\n              </div>\r\n            ) : (\r\n              <span className=\"col-auto\">\r\n                {selectedQuestion &&\r\n                selectedQuestion.votes &&\r\n                !selectedQuestion.votes.includes(user_id) ? (\r\n                  <div>\r\n                    <button\r\n                      className=\"btn q-vote-btn\"\r\n                      onClick={(e) => {\r\n                        asyncVoteSelectedQuestion(selectedQuestion, user_id);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-heart-o\"></i>\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <button\r\n                      className=\"btn q-vote-btn\"\r\n                      onClick={(e) => {\r\n                        asyncVoteSelectedQuestion(selectedQuestion, user_id);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-heart\"></i>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      {/* //* Question Detail Body */}\r\n      <div className=\"card ms-5 me-5\">\r\n        <div\r\n          className=\"comment card-body\"\r\n          dangerouslySetInnerHTML={{ __html: selectedQuestion.question }}\r\n        ></div>\r\n      </div>\r\n      {/*  aa */}\r\n      <div className=\"ms-5 me-5 mt-5\">\r\n        <div className=\"ms-3\">\r\n          <hr />\r\n        </div>\r\n        <h5 className=\"mt-5 ms-3\">Add a comment:</h5>\r\n        <div className=\"mt-3\">\r\n          <CommentList selectedQuestion={selectedQuestion} user_id={user_id} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction QuestionOrderButtons(props) {\r\n  const { searchOrderHandler } = props;\r\n  return (\r\n    <div\r\n      className=\"btn-group mt-4 ms-5\"\r\n      role=\"group\"\r\n      aria-label=\"Button group with nested dropdown\"\r\n    >\r\n      <button className=\"btn\"\r\n              disabled>\r\n        <i>sort by</i>\r\n      </button>\r\n      <button\r\n        className=\"btn me-4 rounded shadow-sm border\"\r\n        onClick={() => {\r\n          searchOrderHandler(1);\r\n        }}\r\n      >\r\n        Votes\r\n      </button>\r\n      <button\r\n        className=\"btn me-4 rounded shadow-sm border\"\r\n        onClick={() => {\r\n          searchOrderHandler(2);\r\n        }}\r\n      >\r\n        Solved\r\n      </button>\r\n      <button\r\n        className=\"btn rounded shadow-sm border\"\r\n        onClick={() => {\r\n          searchOrderHandler(3);\r\n        }}\r\n      >\r\n        Answers\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestionOrderButtons.propTypes = {};\r\n\r\nexport default QuestionOrderButtons;\r\n","import React from \"react\";\r\n\r\nexport default function QuestionList(props) {\r\n  const { questions, user_id, asyncVoteSelectedQuestion, setSelectedQuestion } = props;\r\n  return questions.map((i, idx) => (\r\n    <div key={idx}>\r\n      <div className=\"row card-group shadow p-5 m-5 border rounded\">\r\n        <div className=\"col-sm-2\">\r\n          <div className=\"card text-center\">\r\n            <div className=\"card-body\">\r\n              <div className=\"card-text\">\r\n                <span>{i.votes.length} </span>\r\n                {i.votes.length >= 2 ? \"votes\" : \"vote\"}\r\n                {i && i.votes && !i.votes.includes(user_id) ? (\r\n                  <div>\r\n                    <button\r\n                      className=\"btn btn-lg q-vote-btn\"\r\n                      onClick={(e) => {\r\n                        asyncVoteSelectedQuestion(i, user_id);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-heart-o\"></i>\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <button\r\n                      className=\"btn btn-lg q-vote-btn\"\r\n                      onClick={(e) => {\r\n                        asyncVoteSelectedQuestion(i, user_id);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-heart\"></i>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <hr />\r\n              <p className=\"card-text\">\r\n                <span>{i.comments} </span>\r\n                {i.comments >= 2 ? \"answers\" : \"answer\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-10\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\" onClick={() => setSelectedQuestion(i)}>\r\n                <b>{i.title}</b>\r\n              </h5>\r\n              {i.question.length > 300 ? (\r\n                <div>\r\n                  <div\r\n                    className=\"questionStyle card-text\"\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: i.question.substring(0, 300) + \"...\",\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n              ): (\r\n                <div>\r\n                  <div\r\n                    className=\"questionStyle card-text\"\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: i.question.substring(0, 300),\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n              )}\r\n              <p className=\"card-text text-end\">\r\n                <i>by </i>\r\n                <b> {i.user.username}</b>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n","/* eslint-disable eqeqeq */\r\nimport React, { Component } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/actions/authentication\";\r\nimport {\r\n  getQuestionsByPageNumber,\r\n  setSelectedQuestion,\r\n  backFromSelectedQuestion,\r\n  createQuestionToggle,\r\n  createProfileToggle,\r\n  deleteSelectedQuestion,\r\n  updateQuestionToggle,\r\n  voteSelectedQuestion,\r\n  searchQuestion,\r\n  updateQuestion,\r\n  getBackFromEditProfile\r\n} from \"../../redux/actions/question\";\r\nimport ReactPlayer from \"react-player\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport QuestionEditor from \"./CreateQuestion/QuestionEditor\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport UpdateQuestion from \"./UpdateQuestion/index\";\r\nimport Navigation from \"./Navigation\";\r\nimport QuestionDetails from \"./QuestionDetails\";\r\nimport QuestionOrderButtons from \"./Navigation/QuestionOrderButtons\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport QuestionPagination from \"./QuestionPagination\";\r\nimport \"./home.scss\";\r\n// import \"./logo.png\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.asyncVoteSelectedQuestion = this.asyncVoteSelectedQuestion.bind(this);\r\n    this.searchSubmitHandler = this.searchSubmitHandler.bind(this);\r\n    this.searchOrderHandler = this.searchOrderHandler.bind(this);\r\n  }\r\n  componentWillMount() {\r\n    this.props.getQuestionsByPageNumber(this.props.currentPageQuestion);\r\n  }\r\n  componentDidMount() {\r\n    this.props.getQuestionsByPageNumber(this.props.currentPageQuestion);\r\n  }\r\n  async searchSubmitHandler(event) {\r\n    event.preventDefault();\r\n    await this.props.searchQuestion(event.target.searchValue.value, null);\r\n    // await this.props.setSelectedQuestion(i);\r\n  }\r\n\r\n  async searchOrderHandler(orderType) {\r\n    await this.props.searchQuestion(this.props.searchValue, orderType);\r\n  }\r\n\r\n  async asyncVoteSelectedQuestion(i, user_id) {\r\n    await this.props.voteSelectedQuestion(i, user_id);\r\n  }\r\n\r\n  blurBackground() {\r\n    const divTC = document.getElementById(\"blur\");\r\n    divTC.classList.toggle(\"big-container\");\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      questions,\r\n      logoutUser,\r\n      backFromSelectedQuestion,\r\n      createQuestionToggle,\r\n      createProfileToggle,\r\n      deleteSelectedQuestion,\r\n      updateQuestionToggle,\r\n      renderUpdateQuestion,\r\n      getQuestionsByPageNumber,\r\n      getBackFromEditProfile\r\n    } = this.props;\r\n    let { selectedQuestion, maxPageQuestion, currentPageQuestion } = this.props;\r\n\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    const user_name = localStorage.getItem(\"user_name\");\r\n    const user_email = localStorage.getItem(\"user_email\");\r\n    const user_bio = localStorage.getItem(\"user_bio\");\r\n    const user_photo = localStorage.getItem(\"user_photo\");\r\n\r\n    return (\r\n      <div>\r\n        <link rel=\"stylesheet\" href=\"http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css\" type=\"text/css\" />\r\n        {/* CREATE QUESTION -> BUTTON*/}\r\n        <div>\r\n          <ReactTooltip id=\"createQtip\" place=\"top\" effect=\"solid\">\r\n            Create Question\r\n          </ReactTooltip>\r\n          <button\r\n            data-tip\r\n            data-for=\"createQtip\"\r\n            type=\"button\"\r\n            className=\"btn btn-lg btn-floating plus-btn rounded-circle shadow\"\r\n            onClick={() => {\r\n              createQuestionToggle();\r\n              this.blurBackground();\r\n            }}\r\n          >\r\n            <i className=\"fa fa-plus plus-icon\"></i>\r\n          </button>\r\n          {/*//* -------------------CREATE QUESTION -> FORM */}\r\n          {this.props.renderCreateQuestion && <QuestionEditor backFromSelectedQuestion={backFromSelectedQuestion} blurBackground={this.blurBackground}/>}\r\n        </div>\r\n\r\n        {this.props.renderProfile && <Profile user_name={user_name} user_bio={user_bio} user_email={user_email} user_photo={user_photo} blurBackground={this.blurBackground} getBackFromEditProfile={getBackFromEditProfile}/>}\r\n\r\n        <div className=\"container-fluid\" id=\"blur\">\r\n          <div className=\"row d-flex\">\r\n            {/*//*------------------NAVIGATION BAR------------------- */}\r\n            <Navigation\r\n              backFromSelectedQuestion={backFromSelectedQuestion}\r\n              getQuestionsByPageNumber={getQuestionsByPageNumber}\r\n              searchSubmitHandler={this.searchSubmitHandler}\r\n              createProfileToggle={createProfileToggle}\r\n              blurBackground={this.blurBackground}\r\n              logoutUser={logoutUser}\r\n              user_name={user_name}\r\n              user_photo={user_photo}\r\n            />\r\n            {/*//*------------------HOME BODY------------------- */}\r\n            <div>\r\n              {/* //! ---------------QUESTION DETAILS--------------- */}\r\n              {selectedQuestion.user ? (\r\n                <QuestionDetails\r\n                  selectedQuestion={selectedQuestion}\r\n                  user_id={user_id}\r\n                  deleteSelectedQuestion={deleteSelectedQuestion}\r\n                  updateQuestionToggle={updateQuestionToggle}\r\n                  renderUpdateQuestion={renderUpdateQuestion}\r\n                  asyncVoteSelectedQuestion={this.asyncVoteSelectedQuestion}\r\n                />\r\n              ) : (\r\n                <div>\r\n                  {/* //* -------QUESTION LIST -------------- */}\r\n                  {/* //* ------QUESTION ORDER BUTTON-------- */}\r\n                  {this.props.renderOrderButton && <QuestionOrderButtons searchOrderHandler={this.searchOrderHandler} />}\r\n                  {questions && questions.length > 0 ? (\r\n                    <div>\r\n                      <QuestionList\r\n                        questions={questions}\r\n                        user_id={user_id}\r\n                        asyncVoteSelectedQuestion={this.asyncVoteSelectedQuestion}\r\n                        setSelectedQuestion={this.props.setSelectedQuestion}\r\n                      />\r\n                    </div>\r\n                  ): (\r\n                    <div>\r\n                      <h3 className=\"mt-5 text-center text-secondary\">Nothing to show. Please check back later.</h3>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {/*  ----------Pagination---------------- */}\r\n              {!selectedQuestion && (\r\n                <QuestionPagination\r\n                  currentPageQuestion={currentPageQuestion}\r\n                  getQuestionsByPageNumber={getQuestionsByPageNumber}\r\n                  maxPageQuestion={maxPageQuestion}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    questions: state.question.questions,\r\n    selectedQuestion: state.question.selectedQuestion,\r\n    renderCreateQuestion: state.question.renderCreateQuestion,\r\n    renderProfile: state.question.renderProfile,\r\n    user: state.auth.user,\r\n    renderUpdateQuestion: state.question.renderUpdateQuestion,\r\n    maxPageQuestion: state.question.maxPageQuestion,\r\n    currentPageQuestion: state.question.currentPageQuestion,\r\n    searchValue: state.question.searchValue,\r\n    renderOrderButton: state.question.renderOrderButton,\r\n  };\r\n};\r\nconst Container = connect(mapStateToProps, {\r\n  logoutUser,\r\n  getQuestionsByPageNumber,\r\n  setSelectedQuestion,\r\n  backFromSelectedQuestion,\r\n  createQuestionToggle,\r\n  createProfileToggle,\r\n  deleteSelectedQuestion,\r\n  updateQuestionToggle,\r\n  voteSelectedQuestion,\r\n  searchQuestion,\r\n  getBackFromEditProfile\r\n})(Home);\r\n\r\nexport default Container;\r\n","import React, { Component } from \"react\";\r\nimport \"./notFoundPage.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nclass NotFoundPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"notFoundPage\" style={{ background: \"#181828\" }}>\r\n        {/*dust particel*/}\r\n        <div>\r\n          <div className=\"starsec\" />\r\n          <div className=\"starthird\" />\r\n          <div className=\"starfourth\" />\r\n          <div className=\"starfifth\" />\r\n        </div>\r\n        {/*Dust particle end-*/}\r\n        <div className=\"lamp__wrap\">\r\n          <div className=\"lamp\">\r\n            <div className=\"cable\" />\r\n            <div className=\"cover\" />\r\n            <div className=\"in-cover\">\r\n              <div className=\"bulb\" />\r\n            </div>\r\n            <div className=\"light\" />\r\n          </div>\r\n        </div>\r\n        {/* END Lamp */}\r\n        <section className=\"error\">\r\n          {/* Content */}\r\n          <div className=\"error__content\">\r\n            <div className=\"error__message message\">\r\n              <h1 className=\"message__title\">Page Not Found</h1>\r\n              <p className=\"message__text\">\r\n                We're sorry, the page you were looking for isn't found here. The link you\r\n                followed may either be broken or no longer exists. Please try again, or\r\n                take a look at our.\r\n              </p>\r\n            </div>\r\n            <div className=\"error__nav e-nav\">\r\n              <Link to=\"/\" className=\"e-nav__link\" />\r\n            </div>\r\n          </div>\r\n          {/* END Content */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./screens/Login/login\";\r\nimport Home from \"./screens/Home/Home\";\r\nimport { connect } from \"react-redux\";\r\nimport NotFoundPage from \"../src/screens/NotFoundPage\";\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let { isSignedIn } = this.props;\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            {isSignedIn ? (\r\n              <Route path=\"/\" component={Home} />\r\n            ) : (\r\n              <Route path=\"/\" component={Login} />\r\n            )}\r\n            <Route component={NotFoundPage} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isSignedIn: state.auth.isSignedIn };\r\n};\r\nexport default connect(mapStateToProps, null)(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport combineReducers from \"./redux/reducers\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst store = createStore(combineReducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}