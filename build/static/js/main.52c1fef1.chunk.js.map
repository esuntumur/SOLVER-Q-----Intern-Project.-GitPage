{"version":3,"sources":["redux/actions/type.js","redux/reducers/authReducer.js","redux/reducers/questionReducer.js","redux/reducers/index.js","API/index.js","screens/Login/LoginForm/index.js","screens/Login/login.js","redux/actions/authentication.js","redux/actions/question.js","screens/Home/CreateQuestion/plugins/HandleFullScreen.js","redux/actions/commentAction.js","screens/Home/CreateQuestion/QuestionEditor.js","screens/Home/UpdateQuestion/plugins/HandleFullScreen.js","screens/Home/UpdateQuestion/index.js","screens/Home/CommentList/UpdateComment/plugins/HandleFullScreen.js","screens/Home/CommentList/UpdateComment/index.js","screens/Home/CommentList/plugins/HandleFullScreen.js","screens/Home/CommentList/plugins/AudioPlugin.js","screens/Home/CommentList/plugins/MyCounterB.js","screens/Home/CommentList/CommentEditor.js","screens/Home/CommentList/index.js","screens/Home/Home.jsx","screens/NotFoundPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN","LOGOUT","BACK_FROM_SELECTED_QUESTION","GET_QUESTION_BY_PAGE_NUMBER","SET_SELECTED_QUESTION","CREATE_QUESTION_TOGGLE","UPDATE_QUESTION_TOGGLE","DELETE_SELECTED_QUESTION","UPDATE_SELECTED_QUESTION","CREATE_QUESTION","VOTE_SELECTED_QUESTION","GET_COMMENTS_BY_PAGE_NUMBER","VOTE_COMMENT","SEND_COMMENT","UPDATE_COMMENT","DELETE_COMMENT","UPDATE_COMMENT_TOGGLE","SET_IMAGE_URL","SET_HTML_STRING","TOGGLE_RENDER_AUDIO_RECORDER","initialState","isSignedIn","localStorage","getItem","JSON","parse","token","user","authReducer","state","action","type","payload","questions","comments","selectedQuestion","renderCreateQuestion","renderUpdateQuestion","selectedCommentId","maxPageQuestion","currentPageQuestion","maxPageComment","currentPageComment","imageUrl","htmlString","searchValue","renderOrderButton","renderAudioRecorder","combineReducers","auth","question","stringify","console","log","c","filter","comment","id","idx","item","index","splice","maxPage","currentPage","forEach","selectedComment","votes","push","user_id","unshift","q","includes","vote","axios","create","baseURL","LoginForm","props","useForm","register","errors","formState","handleSubmit","onSubmit","data","alert","required","maxLength","placeholder","firstName","value","Login","bind","handleSubmitSignUp","event","preventDefault","email","target","password","this","loginUser","username","signupUser","className","name","href","message","React","Component","Container","connect","formVlaues","dispatch","a","api","post","undefined","response","error","status","setItem","then","getQuestionsByPageNumber","pageNum","API","questionPage","HandleFullScreen","handleFullScreen","editor","on","PluginComponent","pluginName","align","setHtmlString","html","reqImageUrl","e","form","FormData","append","res","url","createComment","question_id","answer","headers","Authorization","object","getCommentsByPageNumber","commentPage","updateComment","put","commentId","updateCommentToggle","MdEditor","use","QuestionEditor","mdParser","MarkdownIt","onImageUpload","handleEditorChange","callback","title","createQuestion","document","getElementById","classList","toggle","submitHandler","style","height","renderHTML","text","render","onChange","ref","mdEditor","mapDispatchToProps","params","UpdateQuestion","backFromSelectedQuestion","updateQuestion","width","UpdateComment","AudioPlugin","handleClick","setRenderAudioRecorder","onClick","xmlns","fill","viewBox","d","defaultConfig","Counter","config","start","num","setNum","insertText","CommentEditor","handleAudioStop","handleAudioUpload","handleRest","audioDetails","blob","chunks","duration","h","m","s","setState","file","setAudioFile","postComment","record","audioURL","showUIAudio","handleOnChange","CommentList","myFile","voteComment","deleteComment","i","rel","length","map","voteCommentAsync","dangerouslySetInnerHTML","__html","deleteCommentAsync","aria-label","aria-hidden","disabled","number","delete","Home","asyncVoteSelectedQuestion","searchSubmitHandler","searchOrderHandler","searchQuestion","order","orderType","voteSelectedQuestion","getAttribute","removeAttribute","setAttribute","logoutUser","createQuestionToggle","deleteSelectedQuestion","updateQuestionToggle","user_name","place","effect","data-tip","data-for","blurBackground","blurLogo","src","alt","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-haspopup","aria-labelledby","setSelectedQuestion","catch","keyWord","result","NotFoundPage","background","to","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.52c1fef1.chunk.js","sourcesContent":["export const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const BACK_FROM_SELECTED_QUESTION = \"BACK_FROM_SELECTED_QUESTION\";\r\n\r\nexport const GET_QUESTION_BY_PAGE_NUMBER = \"GET_QUESTION_BY_PAGE_NUMBER\"; // Бүх асуултуудыг авах\r\nexport const SET_SELECTED_QUESTION = \"SET_SELECTED_QUESTION\"; // сонгогдсон асуултыг ХАДГАЛАХ\r\nexport const SET_SELECTED_QUESTION_FOR_VOTE = \"SET_SELECTED_QUESTION_FOR_VOTE\"; // сонгогдсон асуултыг ХАДГАЛАХ\r\nexport const CREATE_QUESTION_TOGGLE = \"CREATE_QUESTION_TOGGLE\"; //\r\nexport const UPDATE_QUESTION_TOGGLE = \"UPDATE_QUESTION_TOGGLE\"; //\r\nexport const DELETE_SELECTED_QUESTION = \"DELETE_SELECTED_QUESTION\";\r\nexport const UPDATE_SELECTED_QUESTION = \"UPDATE_SELECTED_QUESTION\";\r\nexport const SET_QUESTION_PAGE = \"SET_QUESTION_PAGE\";\r\nexport const CREATE_QUESTION = \"CREATE_QUESTION\";\r\nexport const DELETE_QUESTION = \"DELETE_QUESTION\";\r\nexport const UPDATE_QUESTION = \"UPDATE_QUESTION\";\r\nexport const VOTE_SELECTED_QUESTION = \"VOTE_SELECTED_QUESTION\";\r\n\r\n// * COMMENTS\r\nexport const GET_COMMENTS_BY_PAGE_NUMBER = \"GET_COMMENTS_BY_PAGE_NUMBER\";\r\nexport const VOTE_COMMENT = \"VOTE_COMMENT\";\r\nexport const SEND_COMMENT = \"SEND_COMMENT\";\r\nexport const UPDATE_COMMENT = \"UPDATE_COMMENT\";\r\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\r\nexport const UPDATE_COMMENT_TOGGLE = \"UPDATE_COMMENT_TOGGLE\";\r\nexport const SET_IMAGE_URL = \"SET_IMAGE_URL\";\r\nexport const SET_HTML_STRING = \"SET_HTML_STRING\";\r\nexport const TOGGLE_RENDER_AUDIO_RECORDER = \"TOGGLE_RENDER_AUDIO_RECORDER\";\r\n","import { LOGIN, LOGOUT } from \"../actions/type\";\r\n\r\nconst initialState = {\r\n  isSignedIn: localStorage.getItem(\"isSignedIn\")\r\n    ? JSON.parse(localStorage.getItem(\"isSignedIn\"))\r\n    : null,\r\n  token: localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null,\r\n  user: {},\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        isSignedIn: true,\r\n        token: action.payload.token,\r\n        user: action.payload.user,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isSignedIn: false,\r\n        token: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import {\r\n  GET_QUESTION_BY_PAGE_NUMBER,\r\n  SET_SELECTED_QUESTION,\r\n  BACK_FROM_SELECTED_QUESTION,\r\n  CREATE_QUESTION,\r\n  CREATE_QUESTION_TOGGLE,\r\n  DELETE_SELECTED_QUESTION,\r\n  UPDATE_QUESTION_TOGGLE,\r\n  UPDATE_SELECTED_QUESTION,\r\n  VOTE_SELECTED_QUESTION,\r\n  GET_COMMENTS_BY_PAGE_NUMBER,\r\n  VOTE_COMMENT,\r\n  SEND_COMMENT,\r\n  DELETE_COMMENT,\r\n  UPDATE_COMMENT,\r\n  UPDATE_COMMENT_TOGGLE,\r\n  SET_IMAGE_URL,\r\n  SET_HTML_STRING,\r\n  TOGGLE_RENDER_AUDIO_RECORDER,\r\n} from \"../actions/type\";\r\n\r\nconst initialState = {\r\n  questions: [],\r\n  comments: [],\r\n  selectedQuestion: false,\r\n  renderCreateQuestion: false,\r\n  renderUpdateQuestion: false,\r\n  selectedCommentId: null,\r\n  maxPageQuestion: 1,\r\n  currentPageQuestion: 1,\r\n  maxPageComment: 1,\r\n  currentPageComment: 1,\r\n  imageUrl: \"\",\r\n  htmlString: \"\",\r\n  searchValue: \"\",\r\n  renderOrderButton: false,\r\n  renderAudioRecorder: false,\r\n};\r\nexport const questionReducer = (\r\n  state = JSON.parse(JSON.stringify(initialState)),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // dispatch({ type: SET_IMAGE_URL, payload: res.data.url });\r\n    case TOGGLE_RENDER_AUDIO_RECORDER: {\r\n      return {\r\n        ...state,\r\n        renderAudioRecorder: !state.renderAudioRecorder,\r\n      };\r\n    }\r\n    case UPDATE_QUESTION_TOGGLE: {\r\n      console.log(`Logged Output ~ updateQuestionToggle`);\r\n      return {\r\n        ...state,\r\n        renderUpdateQuestion: !state.renderUpdateQuestion,\r\n      };\r\n    }\r\n    case SET_HTML_STRING: {\r\n      return {\r\n        ...state,\r\n        htmlString: action.payload,\r\n      };\r\n    }\r\n    case SET_IMAGE_URL: {\r\n      return { ...state, imageUrl: action.payload };\r\n    }\r\n    case UPDATE_COMMENT_TOGGLE: {\r\n      if (state.selectedCommentId !== null) {\r\n        return { ...state, selectedCommentId: null };\r\n      } else return { ...state, selectedCommentId: action.payload };\r\n    }\r\n    // TODO\r\n    case DELETE_COMMENT: {\r\n      // payload comment object\r\n      const c = state.comments.filter((comment) => {\r\n        return comment.id !== action.payload.id;\r\n      });\r\n      return {\r\n        ...state,\r\n        comments: c,\r\n      };\r\n    }\r\n\r\n    // TODO\r\n    case UPDATE_COMMENT: {\r\n      let idx;\r\n      let c = state.comments.filter((item, index) => {\r\n        if (action.payload.id === item.id) idx = index;\r\n        return action.payload.id !== item.id;\r\n      });\r\n      c.splice(idx, 0, action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        comments: c,\r\n      };\r\n    }\r\n    case GET_COMMENTS_BY_PAGE_NUMBER: {\r\n      return {\r\n        ...state,\r\n        comments: action.payload.comments,\r\n        maxPageComment: action.payload.maxPage,\r\n        currentPageComment: action.payload.currentPage,\r\n      };\r\n    }\r\n    case VOTE_COMMENT: {\r\n      // * action.payload: { selectedComment, user_id },\r\n      // TODO payload:   selectedComment.votes.push(user_id)\r\n\r\n      state.comments.forEach((comment) => {\r\n        if (comment.id === action.payload.selectedComment.id) {\r\n          comment.votes.push(action.payload.user_id);\r\n        }\r\n      });\r\n      return { ...state };\r\n    }\r\n    case SEND_COMMENT: {\r\n      state.comments.unshift(action.payload);\r\n      return { ...state };\r\n    }\r\n    case GET_QUESTION_BY_PAGE_NUMBER: {\r\n      return action.payload && action.payload.searchValue\r\n        ? {\r\n            ...state,\r\n            questions: action.payload.questions,\r\n            maxPageQuestion: action.payload.maxPage,\r\n            currentPageQuestion: action.payload.currentPage,\r\n            selectedQuestion: false,\r\n            searchValue: action.payload.searchValue,\r\n            renderOrderButton: true,\r\n          }\r\n        : {\r\n            ...state,\r\n            questions: action.payload.questions,\r\n            maxPageQuestion: action.payload.maxPage,\r\n            currentPageQuestion: action.payload.currentPage,\r\n            selectedQuestion: false,\r\n            renderOrderButton: false,\r\n          };\r\n    }\r\n    case SET_SELECTED_QUESTION: {\r\n      return { ...state, selectedQuestion: action.payload };\r\n    }\r\n    case BACK_FROM_SELECTED_QUESTION: {\r\n      return {\r\n        ...state,\r\n        selectedQuestion: false,\r\n        renderCreateQuestion: false,\r\n        renderUpdateQuestion: false,\r\n        renderOrderButton: false,\r\n        searchValue: false,\r\n      };\r\n    }\r\n    case VOTE_SELECTED_QUESTION: {\r\n      let selectedQuestion = action.payload.selectedQuestion,\r\n        idx,\r\n        user_id = action.payload.user_id;\r\n      let q = state.questions.filter((question, index) => {\r\n        if (selectedQuestion.id === question.id) idx = index;\r\n        return selectedQuestion.id !== question.id;\r\n      });\r\n      selectedQuestion.votes.includes(user_id)\r\n        ? (selectedQuestion.votes = selectedQuestion.votes.filter((vote, idx) => {\r\n            return vote !== user_id;\r\n          }))\r\n        : selectedQuestion.votes.push(user_id);\r\n\r\n      q.splice(idx, 0, selectedQuestion);\r\n\r\n      // TODO => VOTES-ruu user_id-g pushlah\r\n\r\n      return { ...state, questions: q };\r\n    }\r\n    case CREATE_QUESTION: {\r\n      return {\r\n        ...state,\r\n        questions: [...state.questions, action.payload],\r\n        renderCreateQuestion: false,\r\n      };\r\n    }\r\n    case CREATE_QUESTION_TOGGLE: {\r\n      return {\r\n        ...state,\r\n        renderCreateQuestion: !state.renderCreateQuestion,\r\n      };\r\n    }\r\n\r\n    case UPDATE_SELECTED_QUESTION: {\r\n      let selectedQuestion = action.payload,\r\n        idx;\r\n      let q = state.questions.filter((question, index) => {\r\n        if (selectedQuestion.id === question.id) idx = index;\r\n        return selectedQuestion.id !== question.id;\r\n      });\r\n      //  Condition\r\n      q.splice(idx, 0, selectedQuestion);\r\n\r\n      return {\r\n        ...state,\r\n        questions: q,\r\n        selectedQuestion: selectedQuestion,\r\n      };\r\n    }\r\n    case DELETE_SELECTED_QUESTION: {\r\n      const q = state.questions.filter((item) => {\r\n        return action.payload.id !== item.id;\r\n      });\r\n      return {\r\n        ...state,\r\n        questions: q,\r\n        selectedQuestion: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport { questionReducer } from \"./questionReducer\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  question: questionReducer,\r\n});\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://question0a.herokuapp.com/api/v1\",\r\n  // baseURL: \"http://192.168.1.15:3000/api/v1\",\r\n});\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst LoginForm = (props) => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm();\r\n  const onSubmit = (data) => alert(JSON.stringify(data));\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input\r\n        {...register(\"firstName\", { required: true, maxLength: 1 })}\r\n        placeholder=\"First name\"\r\n      />\r\n      {errors.firstName?.type === \"required\" && \"First name is required\"}\r\n      <input {...register(\"lastName\")} placeholder=\"Last name\" />\r\n      <select {...register(\"category\")}>\r\n        <option value=\"\">Select...</option>\r\n        <option value=\"A\">Category A</option>\r\n        <option value=\"B\">Category B</option>\r\n      </select>\r\n\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import \"./login.scss\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser, signupUser } from \"../../redux/actions/authentication\";\r\nimport LoginForm from \"./LoginForm\";\r\n// email: \"dannd@example.com\",\r\n// password: \"238523a\",\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleSubmitSignUp = this.handleSubmitSignUp.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const payload = {\r\n      email: event.target.email.value,\r\n      password: event.target.password.value,\r\n    };\r\n    this.props.loginUser(payload);\r\n  }\r\n\r\n  handleSubmitSignUp(event) {\r\n    event.preventDefault();\r\n    const payload = {\r\n      user: {\r\n        username: event.target.username.value,\r\n        email: event.target.email.value,\r\n        password: event.target.password.value,\r\n      },\r\n    };\r\n\r\n    if (this.props.signupUser(payload)) console.log(\"sign up success\");\r\n    else console.log(\"sign up failed\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"login\">\r\n        <div className=\"l-form\">\r\n          <form className=\"form\" onSubmit={this.handleSubmit}>\r\n            <h4 className=\"form__title\">Log In</h4>\r\n            {/* ---------------Email------------- */}\r\n            <div className=\"form_div\">\r\n              <input type=\"text\" className=\"form__input\" placeholder=\" \" name=\"email\" />\r\n              <label className=\"form__label\">Email</label>\r\n            </div>\r\n            {/* ---------------Password--------------- */}\r\n            <div className=\"form_div\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form__input\"\r\n                placeholder=\" \"\r\n                name=\"password\"\r\n              />\r\n              <label className=\"form__label\">Password</label>\r\n            </div>\r\n            {/* ---------------SUBMIT--------------- */}\r\n            <input type=\"submit\" className=\"form__button mb-3\" value=\"Login\" />\r\n\r\n            {/* ---------------Social buttons--------------- */}\r\n            <div className=\"dropdown-divider\"></div>\r\n            <p className=\"gray\">or login with</p>\r\n            <div className=\"social_icon2\">\r\n              <a href=\"/\" className=\"fa fa-google form__button\">\r\n                {\" \"}\r\n                  Continue with Google\r\n              </a>\r\n              <a href=\"/\" className=\"fa fa-facebook form__button form__button\">\r\n                   Continue with Facebook\r\n              </a>\r\n            </div>\r\n          </form>\r\n\r\n          <form className=\"form\" onSubmit={this.handleSubmitSignUp}>\r\n            <h4 className=\"form__title\">Sign Up</h4>\r\n            {/* ---------------username--------------- */}\r\n            <div className=\"form_div\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form__input\"\r\n                placeholder=\" \"\r\n                name=\"username\"\r\n              />\r\n              <label className=\"form__label\">Username</label>\r\n            </div>\r\n            {/* ---------------Email------------- */}\r\n            <div className=\"form_div\">\r\n              <input type=\"text\" className=\"form__input\" placeholder=\" \" name=\"email\" />\r\n              <label className=\"form__label\">Email</label>\r\n            </div>\r\n            {/* ---------------Password--------------- */}\r\n            <div className=\"form_div\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form__input\"\r\n                placeholder=\" \"\r\n                name=\"password\"\r\n              />\r\n              <label className=\"form__label\">Password</label>\r\n            </div>\r\n\r\n            {/* ---------------SUBMIT--------------- */}\r\n            <input type=\"submit\" className=\"form__button mb-3\" value=\"Sign Up\" />\r\n\r\n            {/* ---------------Social buttons--------------- */}\r\n            <div className=\"dropdown-divider\"></div>\r\n            <p className=\"gray\">or sign up with</p>\r\n            <div className=\"social_icon2\">\r\n              <a href=\"/\" className=\"fa fa-google form__button\">\r\n                {\" \"}\r\n                  Continue with Google\r\n              </a>\r\n              <a href=\"/\" className=\"fa fa-facebook form__button form__button\">\r\n                   Continue with Facebook\r\n              </a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <LoginForm message=\"hello world!\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = connect(null, { loginUser, signupUser })(Login);\r\n\r\nexport default Container;\r\n","import { LOGIN, LOGOUT } from \"./type\";\r\nimport api from \"../../API\";\r\n\r\nexport const loginUser = (formVlaues) => async (dispatch) => {\r\n  const response = await api.post(\"/login\", formVlaues);\r\n\r\n  if (response.data.error === undefined && response.status === 200) {\r\n    localStorage.setItem(\"token\", response.data.token);\r\n    localStorage.setItem(\"user_id\", response.data.user.id);\r\n    localStorage.setItem(\"isSignedIn\", true);\r\n    localStorage.setItem(\"user_name\", response.data.user.username);\r\n    dispatch({ type: LOGIN, payload: response.data });\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n  localStorage.setItem(\"token\", null);\r\n  localStorage.setItem(\"isSignedIn\", false);\r\n  dispatch({ type: LOGOUT, payload: null });\r\n};\r\n\r\nexport const signupUser = (formVlaues) => async (dispatch) => {\r\n  await api.post(\"/users\", formVlaues).then((response) => {\r\n    return true;\r\n  });\r\n  return false;\r\n};\r\n","import {\r\n  GET_QUESTION_BY_PAGE_NUMBER,\r\n  CREATE_QUESTION_TOGGLE,\r\n  CREATE_QUESTION,\r\n  SET_SELECTED_QUESTION,\r\n  BACK_FROM_SELECTED_QUESTION,\r\n  UPDATE_SELECTED_QUESTION,\r\n  DELETE_SELECTED_QUESTION,\r\n  VOTE_SELECTED_QUESTION,\r\n  UPDATE_QUESTION_TOGGLE,\r\n} from \"./type\";\r\nimport API from \"../../API\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n// todo VOTE QUESTION: questions/1/vote      json => {vote: { question_id: selectedQuestion.id }}\r\n\r\nexport const getQuestionsByPageNumber = (pageNum) => async (dispatch) => {\r\n  await API.post(\"/questions/page\", { questionPage: pageNum }).then((response) => {\r\n    dispatch({ type: GET_QUESTION_BY_PAGE_NUMBER, payload: response.data });\r\n    console.log(`Logged Output ~ response.data`, response.data);\r\n  });\r\n};\r\n// TODO => searchQuestion\r\nexport const searchQuestion = (searchValue, order) => async (dispatch) => {\r\n  await API.post(\"/questions/search\", {\r\n    keyWord: searchValue, //хайх утга\r\n    order: order, //эрэмблэлт\r\n    currentPage: \"1\", //Одоогийн page\r\n  }).then((response) => {\r\n    console.log(`Logged Output ~ response.data `, response.data);\r\n    const questions = response.data.result;\r\n    const maxPage = response.data.maxPage;\r\n    const currentPage = response.data.currentPage;\r\n    dispatch({\r\n      type: GET_QUESTION_BY_PAGE_NUMBER,\r\n      payload: { questions, maxPage, currentPage, searchValue },\r\n    });\r\n  });\r\n};\r\n\r\nexport const createQuestionToggle = () => async (dispatch) => {\r\n  dispatch({ type: CREATE_QUESTION_TOGGLE });\r\n};\r\n\r\nexport const createQuestion = (params) => async (dispatch) => {\r\n  const response = await API.post(\"/questions\", params, {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  });\r\n\r\n  dispatch({ type: CREATE_QUESTION, payload: response.data.object });\r\n};\r\n\r\nexport const setSelectedQuestion = (selectedQuestion) => async (dispatch) => {\r\n  dispatch({ type: SET_SELECTED_QUESTION, payload: selectedQuestion });\r\n};\r\n\r\nexport const backFromSelectedQuestion = () => async (dispatch) => {\r\n  dispatch({ type: BACK_FROM_SELECTED_QUESTION });\r\n};\r\n\r\nexport const updateQuestionToggle = () => async (dispatch) => {\r\n  console.log(`Logged Output ~ updateQuestionToggle`);\r\n  dispatch({ type: UPDATE_QUESTION_TOGGLE });\r\n  console.log(`Logged Output ~ updateQuestionToggle`);\r\n};\r\n\r\n// TODO => update question\r\nexport const updateQuestion = (payload) => async (dispatch) => {\r\n  await API.put(`/questions/${payload.id}`, payload.params, {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  }).then((response) => {\r\n    dispatch({ type: UPDATE_SELECTED_QUESTION, payload: response.data.object });\r\n  });\r\n};\r\n\r\nexport const deleteSelectedQuestion = (selectedQuestion) => async (dispatch) => {\r\n  console.log(`Logged Output ~ selectedQuestion`, selectedQuestion);\r\n  const response = await API.delete(`/questions/${selectedQuestion.id}`, {\r\n    headers: { Authorization: token },\r\n  });\r\n\r\n  console.log(`Logged Output ~ response.data`, response.data);\r\n  dispatch({ type: DELETE_SELECTED_QUESTION, payload: response.data.object });\r\n};\r\n\r\nexport const voteSelectedQuestion = (selectedQuestion, user_id) => async (dispatch) => {\r\n  await API.post(\r\n    `/questions/${selectedQuestion.id}/vote`,\r\n    {\r\n      vote: { question_id: selectedQuestion.id },\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }\r\n  )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: VOTE_SELECTED_QUESTION,\r\n        payload: { selectedQuestion, user_id },\r\n      });\r\n    })\r\n    //!CATCH ILREH ?\r\n    .catch((error) => {});\r\n};\r\n","import * as React from \"react\";\r\nimport { PluginComponent } from \"react-markdown-editor-lite\";\r\n\r\nexport default class HandleFullScreen extends PluginComponent {\r\n  static pluginName = \"handle-full-screen\";\r\n  static align = \"left\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleFullScreen = this.handleFullScreen.bind(this);\r\n  }\r\n\r\n  handleFullScreen() {\r\n    console.log(\"on full screen change\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editor.on(\"fullscreen\", this.handleFullScreen);\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.editor.off(\"fullscreen\", this.handleFullScreen);\r\n  // }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import API from \"../../API\";\r\nimport {\r\n  GET_COMMENTS_BY_PAGE_NUMBER,\r\n  VOTE_COMMENT,\r\n  SEND_COMMENT,\r\n  DELETE_COMMENT,\r\n  UPDATE_COMMENT_TOGGLE,\r\n  UPDATE_COMMENT,\r\n  SET_IMAGE_URL,\r\n  SET_HTML_STRING,\r\n  TOGGLE_RENDER_AUDIO_RECORDER,\r\n} from \"./type\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\nexport const setRenderAudioRecorder = (html) => async (dispatch) => {\r\n  console.log(`Logged Output ~ setRenderAudioRecorder`);\r\n  dispatch({ type: TOGGLE_RENDER_AUDIO_RECORDER });\r\n};\r\n\r\nexport const setHtmlString = (html) => async (dispatch) => {\r\n  dispatch({ type: SET_HTML_STRING, payload: html });\r\n};\r\nexport const setAudioFile = (e) => async (dispatch) => {\r\n  console.log(`Logged Output ~ setAudioFile`);\r\n};\r\nexport const reqAudioUrl = (e) => async (dispatch) => {\r\n  let form = new FormData();\r\n  try {\r\n    form.append(\"image\", e, e.name);\r\n    await API.post(`/upload`, form).then((res) => {\r\n      console.log(`Logged Output ~ res.data`, res.data);\r\n      console.log(`Logged Output ~ res.data.url`, typeof res.data.url);\r\n      dispatch({ type: SET_IMAGE_URL, payload: res.data.url });\r\n      return res.data.url;\r\n    });\r\n  } catch (error) {\r\n    console.log(\"reqImageUrl error: \", error);\r\n  }\r\n};\r\n\r\nexport const reqImageUrl = (e) => async (dispatch) => {\r\n  let form = new FormData();\r\n  try {\r\n    form.append(\"image\", e, e.name);\r\n    await API.post(`/upload`, form).then((res) => {\r\n      console.log(`Logged Output ~ res.data`, res.data);\r\n      console.log(`Logged Output ~ res.data.url`, typeof res.data.url);\r\n      dispatch({ type: SET_IMAGE_URL, payload: res.data.url });\r\n      return res.data.url;\r\n    });\r\n  } catch (error) {\r\n    console.log(\"reqImageUrl error: \", error);\r\n  }\r\n};\r\n\r\nexport const createComment = (htmlString, selectedQuestion) => async (dispatch) => {\r\n  console.log(`Logged Output ~ selectedQuestion`, selectedQuestion);\r\n  console.log(`Logged Output ~ htmlString`, htmlString);\r\n  //  this.props.createComment(this.props.htmlString, this.props.selectedQuestion);\r\n\r\n  await API.post(\r\n    \"comments\",\r\n    {\r\n      comment: {\r\n        question_id: selectedQuestion.id,\r\n        answer: htmlString,\r\n      },\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }\r\n  ).then((response) => {\r\n    console.log(`Logged Output ~ response.data.object`, response.data.object);\r\n    dispatch({ type: SEND_COMMENT, payload: response.data.object });\r\n  });\r\n};\r\n\r\nexport const getCommentsByPageNumber =\r\n  (selectedQuestion, currentPageComment) => async (dispatch) => {\r\n    await API.post(`questions/${selectedQuestion.id}/comments`, {\r\n      commentPage: currentPageComment,\r\n    }).then((response) => {\r\n      dispatch({ type: GET_COMMENTS_BY_PAGE_NUMBER, payload: response.data });\r\n    });\r\n  };\r\n\r\nexport const deleteComment = (comment) => async (dispatch) => {\r\n  await API.delete(`/comments/${comment.id}`, {\r\n    headers: { Authorization: token },\r\n  }).then((response) => {\r\n    dispatch({ type: DELETE_COMMENT, payload: response.data.object });\r\n  });\r\n};\r\n\r\nexport const updateComment = (payload) => async (dispatch) => {\r\n  await API.put(\r\n    `/comments/${payload.commentId}`,\r\n    { answer: payload.answer },\r\n    {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }\r\n  ).then((response) => {\r\n    dispatch({ type: UPDATE_COMMENT, payload: response.data.object });\r\n  });\r\n};\r\nexport const updateCommentToggle = (payload) => async (dispatch) => {\r\n  dispatch({ type: UPDATE_COMMENT_TOGGLE, payload: payload });\r\n};\r\n\r\nexport const voteComment = (selectedComment, user_id) => async (dispatch) => {\r\n  // todo VOTE COMMENT: questions/1/comments/18/vote   json => {vote: { comment_id: selectedComment.id }}\r\n  await API.post(`/comments/${selectedComment.id}/vote`, null, {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  }).then(() => {\r\n    dispatch({\r\n      type: VOTE_COMMENT,\r\n      payload: { selectedComment, user_id },\r\n    });\r\n  });\r\n  // await API.post(\"url\", null);\r\n};\r\n","// 'use strict';\r\nimport React from \"react\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport MarkdownIt from \"markdown-it\";\r\n// import ReactMarkdown from \"react-markdown\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport HandleFullScreen from \"./plugins/HandleFullScreen\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\nimport {\r\n  createQuestion,\r\n  getQuestionsByPageNumber,\r\n} from \"../../../redux/actions/question\";\r\nimport { setHtmlString, reqImageUrl } from \"../../../redux/actions/commentAction\";\r\nMdEditor.use(HandleFullScreen);\r\n\r\n// * ---------------- CLASS -----------------\r\nexport class QuestionEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mdParser = new MarkdownIt(/* Markdown-it options */);\r\n    this.onImageUpload = this.onImageUpload.bind(this);\r\n    this.handleEditorChange = this.handleEditorChange.bind(this);\r\n  }\r\n  async onImageUpload(e, callback) {\r\n    await this.props.reqImageUrl(e);\r\n    await callback(this.props.imageUrl);\r\n  }\r\n\r\n  handleEditorChange({ html }) {\r\n    console.log(\"html: \", typeof html);\r\n    this.props.setHtmlString(html);\r\n    //  return <div dangerouslySetInnerHTML={{ __html: htmlString }}></div>;\r\n  }\r\n  async submitHandler(event) {\r\n    event.preventDefault();\r\n    const payload = {\r\n      questions: {\r\n        title: event.target.title.value,\r\n        question: this.props.htmlString,\r\n      },\r\n    };\r\n    await this.props.createQuestion(payload);\r\n    await this.props.getQuestionsByPageNumber(this.props.currentPageQuestion);\r\n\r\n    const divTC = document.getElementById(\"blur\")\r\n    divTC.classList.toggle(\"big-container\") \r\n\r\n    console.log(`Logged Output ~ this.props`, this.props);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div id=\"createQuestion\">\r\n        <div className=\"form-bg\">\r\n          <form className=\"form\" onSubmit={this.submitHandler.bind(this)}>\r\n            <div className=\"form-group\">\r\n              <label className=\"sr-only\">Title</label>{\" \"}\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                required\r\n                placeholder=\"Title\"\r\n                name=\"title\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"sr-only\">Question details</label>\r\n              <div style={{ height: \"400px\"}} className=\"mdEditor\">\r\n                <MdEditor\r\n                  onImageUpload={this.onImageUpload}\r\n                  renderHTML={(text) => this.mdParser.render(text)}\r\n                  onChange={this.handleEditorChange}\r\n                  style={{height: \"400px\"}}\r\n                  ref={this.mdEditor}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-sm text-center btn-blue\">\r\n              Post Question\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(`redux state`, state);\r\n  return {\r\n    imageUrl: state.question.imageUrl,\r\n    htmlString: state.question.htmlString,\r\n    selectedQuestion: state.question.selectedQuestion,\r\n    currentPageQuestion: state.question.currentPageQuestion,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setHtmlString,\r\n  reqImageUrl,\r\n  createQuestion,\r\n  getQuestionsByPageNumber,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionEditor);\r\n","import * as React from \"react\";\r\nimport { PluginComponent } from \"react-markdown-editor-lite\";\r\n\r\nexport default class HandleFullScreen extends PluginComponent {\r\n  static pluginName = \"handle-full-screen\";\r\n  static align = \"left\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleFullScreen = this.handleFullScreen.bind(this);\r\n  }\r\n\r\n  handleFullScreen() {\r\n    console.log(\"on full screen change\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editor.on(\"fullscreen\", this.handleFullScreen);\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.editor.off(\"fullscreen\", this.handleFullScreen);\r\n  // }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\nimport { updateQuestion } from \"../../../redux/actions/question\";\r\nimport { connect } from \"react-redux\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport MarkdownIt from \"markdown-it\";\r\n// import ReactMarkdown from \"react-markdown\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport HandleFullScreen from \"./plugins/HandleFullScreen\";\r\n\r\nimport { setHtmlString, reqImageUrl } from \"../../../redux/actions/commentAction\";\r\nMdEditor.use(HandleFullScreen);\r\n\r\nclass UpdateQuestion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mdParser = new MarkdownIt(/* Markdown-it options */);\r\n    this.onImageUpload = this.onImageUpload.bind(this);\r\n    this.handleEditorChange = this.handleEditorChange.bind(this);\r\n  }\r\n  async onImageUpload(e, callback) {\r\n    await this.props.reqImageUrl(e);\r\n    await callback(this.props.imageUrl);\r\n  }\r\n\r\n  handleEditorChange({ html }) {\r\n    console.log(\"html: \", typeof html);\r\n    this.props.setHtmlString(html);\r\n  }\r\n  submitHandler(event) {\r\n    event.preventDefault();\r\n    const { selectedQuestion } = this.props;\r\n    const payload = {\r\n      id: selectedQuestion.id,\r\n      params: {\r\n        questions: {\r\n          title: event.target.title.value,\r\n          question: this.props.htmlString,\r\n        },\r\n      },\r\n      backFromSelectedQuestion: this.props.backFromSelectedQuestion,\r\n    };\r\n    this.props.updateQuestion(payload);\r\n    // this.props.backFromSelectedQuestion();\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"updateQuestion\">\r\n        <div className=\"form-bg\">\r\n          <form className=\"form\" onSubmit={this.submitHandler.bind(this)}>\r\n            <h4>UPDATE YOUR QUESTION HERE!!!</h4>\r\n            <div className=\"form-group\">\r\n              {\" \"}\r\n              <label className=\"sr-only\">Update your Title!!!</label>{\" \"}\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                required\r\n                placeholder=\"Title\"\r\n                name=\"title\"\r\n              />{\" \"}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              {\" \"}\r\n              <label className=\"sr-only\">Update your Question details!!!</label>{\" \"}\r\n              <div style={{ height: \"22.5rem\", width: \"58.5rem\" }} className=\"mdEditor\">\r\n                <MdEditor\r\n                  onImageUpload={this.onImageUpload}\r\n                  renderHTML={(text) => this.mdParser.render(text)}\r\n                  onChange={this.handleEditorChange}\r\n                  style={{\r\n                    height: \"22.5rem\",\r\n                  }}\r\n                  ref={this.mdEditor}\r\n                />\r\n              </div>\r\n            </div>{\" \"}\r\n            <button type=\"submit\" className=\"btn text-center btn-blue\">\r\n              UPDATE\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(`redux state`, state);\r\n  return {\r\n    imageUrl: state.question.imageUrl,\r\n    htmlString: state.question.htmlString,\r\n    selectedQuestion: state.question.selectedQuestion,\r\n    currentPageQuestion: state.question.currentPageQuestion,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  updateQuestion,\r\n  setHtmlString,\r\n  reqImageUrl,\r\n})(UpdateQuestion);\r\n","import * as React from \"react\";\r\nimport { PluginComponent } from \"react-markdown-editor-lite\";\r\n\r\nexport default class HandleFullScreen extends PluginComponent {\r\n  static pluginName = \"handle-full-screen\";\r\n  static align = \"left\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleFullScreen = this.handleFullScreen.bind(this);\r\n  }\r\n\r\n  handleFullScreen() {\r\n    console.log(\"on full screen change\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editor.on(\"fullscreen\", this.handleFullScreen);\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.editor.off(\"fullscreen\", this.handleFullScreen);\r\n  // }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport HandleFullScreen from \"./plugins/HandleFullScreen\";\r\n// import AudioPlugin from \"./plugins/AudioPlugin\";\r\nimport {\r\n  updateCommentToggle,\r\n  reqImageUrl,\r\n  setHtmlString,\r\n  updateComment,\r\n} from \"../../../../redux/actions/commentAction\";\r\nimport \"./updateComment.scss\";\r\n\r\n// MdEditor.use(AudioPlugin);\r\nMdEditor.use(HandleFullScreen);\r\n\r\nexport class UpdateComment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mdParser = new MarkdownIt(/* Markdown-it options */);\r\n    this.onImageUpload = this.onImageUpload.bind(this);\r\n    this.handleEditorChange = this.handleEditorChange.bind(this);\r\n  }\r\n  async onImageUpload(e, callback) {\r\n    await this.props.reqImageUrl(e);\r\n    await callback(this.props.imageUrl);\r\n  }\r\n\r\n  handleEditorChange({ html }) {\r\n    this.props.setHtmlString(html);\r\n  }\r\n  async submitHandler(event) {\r\n    event.preventDefault();\r\n    const payload = {\r\n      answer: this.props.htmlString,\r\n      commentId: this.props.selectedCommentId,\r\n    };\r\n    await this.props.updateComment(payload);\r\n    await this.props.updateCommentToggle(this.props.selectedCommentId);\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"updateComment\">\r\n        <div className=\"form-bg\">\r\n          <form className=\"form\" onSubmit={this.submitHandler.bind(this)}>\r\n            <div className=\"form-group\">\r\n              <label className=\"sr-only\">Question details</label>\r\n              <div style={{ height: \"400px\" }}>\r\n                <MdEditor\r\n                  onImageUpload={this.onImageUpload}\r\n                  renderHTML={(text) => this.mdParser.render(text)}\r\n                  onChange={this.handleEditorChange}\r\n                  style={{\r\n                    height: \"300px\",\r\n                  }}\r\n                  ref={this.mdEditor}\r\n                />\r\n                <hr />\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn text-center btn-blue\">\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    imageUrl: state.question.imageUrl,\r\n    htmlString: state.question.htmlString,\r\n    selectedQuestion: state.question.selectedQuestion,\r\n    currentPageComment: state.question.currentPageComment,\r\n    renderAudioRecorder: state.question.renderAudioRecorder,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  updateCommentToggle,\r\n  updateComment,\r\n  reqImageUrl,\r\n  setHtmlString,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateComment);\r\n","import * as React from \"react\";\r\nimport { PluginComponent } from \"react-markdown-editor-lite\";\r\n\r\nexport default class HandleFullScreen extends PluginComponent {\r\n  static pluginName = \"handle-full-screen\";\r\n  static align = \"left\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleFullScreen = this.handleFullScreen.bind(this);\r\n  }\r\n\r\n  handleFullScreen() {\r\n    console.log(\"on full screen change\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editor.on(\"fullscreen\", this.handleFullScreen);\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.editor.off(\"fullscreen\", this.handleFullScreen);\r\n  // }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { PluginComponent } from \"react-markdown-editor-lite\";\r\nimport { connect } from \"react-redux\";\r\nimport { setRenderAudioRecorder } from \"../../../../redux/actions/commentAction\";\r\n\r\nexport class AudioPlugin extends PluginComponent {\r\n  static pluginName = \"audio-player-plugin\";\r\n  static align = \"left\";\r\n  static defaultConfig = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.setRenderAudioRecorder();\r\n    console.log(\"renderAudioRecorder: \", this.props.renderAudioRecorder);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"button\" title=\"audio-player-plugin\" onClick={this.handleClick}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-mic-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\" />\r\n          <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\" />\r\n        </svg>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  renderAudioRecorder: state.question.renderAudioRecorder,\r\n});\r\n\r\nconst mapDispatchToProps = { setRenderAudioRecorder };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioPlugin);\r\n","import * as React from \"react\";\r\n\r\nconst Counter = (props) => {\r\n  const [num, setNum] = React.useState(props.config.start);\r\n\r\n  const handleClick = () => {\r\n    // 调用API，往编辑器中插入一个数字\r\n    props.editor.insertText(num);\r\n    // 更新一下自身的state\r\n    setNum(num + 1);\r\n  };\r\n\r\n  return (\r\n    <span className=\"button button-type-counter\" title=\"Counter\" onClick={handleClick}>\r\n      {num}\r\n    </span>\r\n  );\r\n};\r\n// 如果需要的话，可以在这里定义默认选项\r\nCounter.defaultConfig = {\r\n  start: 1,\r\n};\r\nCounter.align = \"left\";\r\nCounter.pluginName = \"my-counter-b\";\r\n\r\nexport default Counter;\r\n","// 'use strict';\r\nimport React from \"react\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport MarkdownIt from \"markdown-it\";\r\n// import ReactMarkdown from \"react-markdown\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport HandleFullScreen from \"./plugins/HandleFullScreen\";\r\nimport AudioPlugin from \"./plugins/AudioPlugin\";\r\nimport MyCounterB from \"./plugins/MyCounterB\";\r\nimport {\r\n  reqImageUrl,\r\n  createComment,\r\n  setHtmlString,\r\n  getCommentsByPageNumber,\r\n  setAudioFile,\r\n} from \"../../../redux/actions/commentAction\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./commentList.scss\";\r\nimport { Recorder } from \"react-voice-recorder\";\r\nimport \"react-voice-recorder/dist/index.css\";\r\nMdEditor.use(AudioPlugin);\r\nMdEditor.use(HandleFullScreen);\r\n\r\n// * ---------------- CLASS\r\nexport class CommentEditor extends React.Component {\r\n  mdParser = null;\r\n  constructor(props) {\r\n    super(props);\r\n    this.mdParser = new MarkdownIt(/* Markdown-it options */);\r\n    this.onImageUpload = this.onImageUpload.bind(this);\r\n    this.handleEditorChange = this.handleEditorChange.bind(this);\r\n    this.handleAudioStop = this.handleAudioStop.bind(this);\r\n    this.handleAudioUpload = this.handleAudioUpload.bind(this);\r\n    this.handleRest = this.handleRest.bind(this);\r\n    this.state = {\r\n      audioDetails: {\r\n        url: null,\r\n        blob: null,\r\n        chunks: null,\r\n        duration: {\r\n          h: null,\r\n          m: null,\r\n          s: null,\r\n        },\r\n      },\r\n    };\r\n  }\r\n  handleAudioStop(data) {\r\n    console.log(data);\r\n    this.setState({ audioDetails: data });\r\n  }\r\n\r\n  handleAudioUpload(file) {\r\n    this.props.setAudioFile(file);\r\n  }\r\n\r\n  handleRest() {\r\n    const reset = {\r\n      url: null,\r\n      blob: null,\r\n      chunks: null,\r\n      duration: {\r\n        h: null,\r\n        m: null,\r\n        s: null,\r\n      },\r\n    };\r\n    this.setState({ audioDetails: reset });\r\n  }\r\n  async onImageUpload(e, callback) {\r\n    await this.props.reqImageUrl(e);\r\n    await callback(this.props.imageUrl);\r\n  }\r\n\r\n  handleEditorChange({ html }) {\r\n    this.props.setHtmlString(html);\r\n  }\r\n  async postComment(e) {\r\n    e.preventDefault();\r\n\r\n    await this.props.createComment(this.props.htmlString, this.props.selectedQuestion);\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"createComment\">\r\n        <div className=\"form-bg\">\r\n          <form className=\"form\" onSubmit={this.postComment.bind(this)}>\r\n            <div className=\"form-group\">\r\n              {/* <label className=\"sr-only\">Question details</label> */}\r\n              <div style={{ height: \"400px\" }}>\r\n                <MdEditor\r\n                  onImageUpload={this.onImageUpload}\r\n                  renderHTML={(text) => this.mdParser.render(text)}\r\n                  onChange={this.handleEditorChange}\r\n                  style={{\r\n                    height: \"400px\",\r\n                  }}\r\n                  ref={this.mdEditor}\r\n                />\r\n                <hr />\r\n              </div>\r\n            </div>\r\n            {this.props.renderAudioRecorder && (\r\n              <Recorder\r\n                record={true}\r\n                title={\"New recording\"}\r\n                audioURL={this.state.audioDetails.url}\r\n                showUIAudio\r\n                handleAudioStop={(data) => this.handleAudioStop(data)}\r\n                handleOnChange={(value) => this.handleOnChange(value, \"firstname\")}\r\n                handleAudioUpload={(data) => this.handleAudioUpload(data)}\r\n                handleRest={() => this.handleRest()}\r\n              />\r\n            )}\r\n\r\n            <button className=\"btn btn-lg mt-3 comment-post-btn\" type=\"submit\">\r\n              Post\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    imageUrl: state.question.imageUrl,\r\n    htmlString: state.question.htmlString,\r\n    selectedQuestion: state.question.selectedQuestion,\r\n    currentPageComment: state.question.currentPageComment,\r\n    renderAudioRecorder: state.question.renderAudioRecorder,\r\n  };\r\n};\r\n// selectedQuestion, ;\r\n\r\nconst mapDispatchToProps = {\r\n  reqImageUrl,\r\n  setHtmlString,\r\n  createComment,\r\n  getCommentsByPageNumber,\r\n  setAudioFile,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentEditor);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UpdateComment from \"./UpdateComment/index\";\r\nimport {\r\n  getCommentsByPageNumber,\r\n  voteComment,\r\n  createComment,\r\n  deleteComment,\r\n  updateComment,\r\n  updateCommentToggle,\r\n} from \"../../../redux/actions/commentAction\";\r\nimport CommentEditor from \"./CommentEditor\";\r\n\r\nexport class CommentList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  async componentWillMount() {\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n\r\n  async createCommentAsync(event) {\r\n    event.preventDefault();\r\n    // event.target.myFile.value\r\n    console.log(`Logged Output ~ event`, event);\r\n    console.log(`Logged Output ~ event.target.myFile.value`, event.target.myFile.value);\r\n    // await this.props.createComment(this.props.selectedQuestion, event.target.answer.value);\r\n    // await this.props.getCommentsByPageNumber(\r\n    //   this.props.selectedQuestion,\r\n    //   this.props.currentPageComment\r\n    // );\r\n  }\r\n  async voteCommentAsync(comment) {\r\n    await this.props.voteComment(\r\n      comment,\r\n      this.props.user_id,\r\n      this.props.getCommentsByPageNumber\r\n    );\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n  async deleteCommentAsync(comment) {\r\n    await this.props.deleteComment(comment);\r\n    await this.props.getCommentsByPageNumber(\r\n      this.props.selectedQuestion,\r\n      this.props.currentPageComment\r\n    );\r\n  }\r\n  async updateCommentAsync(event) {\r\n    // await this.props.updateComment(comment);\r\n    // await this.props.getCommentsByPageNumber(\r\n    //   this.props.selectedQuestion,\r\n    //   this.props.currentPageComment\r\n    // );\r\n  }\r\n  render() {\r\n    let pageNum = [];\r\n    for (let i = 1; i <= this.props.maxPageComment; i++) {\r\n      pageNum.push(i);\r\n    }\r\n    const { getCommentsByPageNumber, comments, updateCommentToggle } = this.props;\r\n    let {\r\n      currentPageComment,\r\n      maxPageComment,\r\n      selectedQuestion,\r\n      user_id,\r\n      selectedCommentId,\r\n    } = this.props;\r\n\r\n    user_id *= 1;\r\n\r\n    return (\r\n      <div>\r\n        {/* //* Create COMMENT */}\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css\"\r\n          type=\"text/css\"\r\n        />\r\n        {/* //* Create COMMENT */}\r\n        <CommentEditor />\r\n        {/* //* Comment LIST */}\r\n        <div>\r\n          {comments.length > 0 ? (\r\n            <div className=\"ms-3 me-3\">\r\n              <div><hr/></div>\r\n              <h4 className=\"mt-5\">\r\n                <b>Comments:</b>\r\n              </h4>\r\n            </div>\r\n          ):(\"\")}\r\n          {comments &&\r\n            comments.length > 0 &&\r\n            comments.map((comment, idx) => (\r\n              <div className=\"card mb-4 ms-3 me-3\" key={idx}>\r\n                <div className=\"card-group shadow p-5 m-3 border rounded\">\r\n                  {/* //* Comment -> VOTE, count && user name, profile */}\r\n                  <div className=\"col-sm-1\">\r\n                    <div className=\"card text-center\">\r\n                      <div className=\"card-body\">\r\n                        <div className=\"card-text\">\r\n                          <span>{comment.votes.length} </span>\r\n                          {comment.votes.length >= 2 ? \"votes\" : \"vote\"}\r\n                          <div>\r\n                            {/* //* VOTE Comment */}\r\n                            {!comment.votes.includes(user_id) ? (\r\n                              <div>\r\n                                <button\r\n                                  className=\"btn c-vote-btn\"\r\n                                  onClick={() => {\r\n                                    this.voteCommentAsync.bind(this)(comment);\r\n                                  }}\r\n                                >\r\n                                  <i className=\"fa fa-heart-o\"></i>\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              <button\r\n                                className=\"btn c-vote-btn\"\r\n                                onClick={() => {\r\n                                  this.voteCommentAsync.bind(this)(comment);\r\n                                }}\r\n                              >\r\n                                <i className=\"fa fa-heart\"></i>\r\n                              </button>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-9\">\r\n                    {/* //* Comment -> Answer TEXT */}\r\n                    <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                        <div\r\n                          className=\"comment\"\r\n                          dangerouslySetInnerHTML={{ __html: comment.answer }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <div className=\"card align-items-end\">\r\n                      {/* //* Comment -> Delete, Update -> buttons */}\r\n                      {comment.user.id === user_id && (\r\n                        <div>\r\n                          <div className=\"row\">\r\n                            <button\r\n                              className=\"rounded btn shadow\"\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                this.deleteCommentAsync.bind(this)(comment);\r\n                              }}\r\n                            >\r\n                              Delete\r\n                            </button>{\" \"}\r\n                          </div>\r\n                          <br />\r\n                          <div className=\"row\">\r\n                            {\" \"}\r\n                            <button\r\n                              className=\"rounded btn shadow\"\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                updateCommentToggle(comment.id);\r\n                              }}\r\n                            >\r\n                              Update\r\n                            </button>{\" \"}\r\n                            <div className=\"d-flex\">\r\n                              {selectedCommentId === comment.id ? (\r\n                                <UpdateComment selectedCommentId={selectedCommentId} />\r\n                              ) : null}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        {/* //* comment PAGINATION - prev, next buttons  222222222222222 */}\r\n        <nav aria-label=\"Page navigation example\">\r\n          <div>\r\n            <ul className=\"pagination justify-content-center\">\r\n              {currentPageComment >= 2 ? (\r\n                <li className=\"page-item\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn pg-btn\"\r\n                    onClick={() =>\r\n                      getCommentsByPageNumber(\r\n                        this.props.selectedQuestion,\r\n                        --currentPageComment\r\n                      )\r\n                    }\r\n                  >\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                  </button>{\" \"}\r\n                </li>\r\n              ) : (\r\n                <button className=\"btn btn-dark pg-btn\" disabled>\r\n                  <span aria-hidden=\"true\">&laquo;</span>\r\n                </button>\r\n              )}\r\n\r\n              {pageNum &&\r\n                pageNum.length > 0 &&\r\n                pageNum.map((number, idx) => (\r\n                  <li key={idx} className=\"page-item\">\r\n                    <button\r\n                      className=\"page-link pg-btn\"\r\n                      onClick={() => {\r\n                        getCommentsByPageNumber(this.props.selectedQuestion, number);\r\n                      }}\r\n                    >\r\n                      {number}\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              {currentPageComment >= maxPageComment ? null : (\r\n                <li className=\"page-item\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn pg-btn\"\r\n                    onClick={() =>\r\n                      getCommentsByPageNumber(\r\n                        this.props.selectedQuestion,\r\n                        ++currentPageComment\r\n                      )\r\n                    }\r\n                  >\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                  </button>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        )\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    comments: state.question.comments,\r\n    maxPageComment: state.question.maxPageComment,\r\n    currentPageComment: state.question.currentPageComment,\r\n    selectedCommentId: state.question.selectedCommentId,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = {\r\n  getCommentsByPageNumber,\r\n  voteComment,\r\n  createComment,\r\n  deleteComment,\r\n  updateComment,\r\n  updateCommentToggle,\r\n};\r\n// ;\r\nconst Container = connect(mapStateToProps, mapDispatchToProps)(CommentList);\r\nexport default Container;\r\n","/* eslint-disable eqeqeq */\r\nimport React, { Component } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/actions/authentication\";\r\nimport {\r\n  getQuestionsByPageNumber,\r\n  setSelectedQuestion,\r\n  backFromSelectedQuestion,\r\n  createQuestionToggle,\r\n  deleteSelectedQuestion,\r\n  updateQuestionToggle,\r\n  voteSelectedQuestion,\r\n  searchQuestion,\r\n  updateQuestion,\r\n} from \"../../redux/actions/question\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport QuestionEditor from \"./CreateQuestion/QuestionEditor\";\r\nimport UpdateQuestion from \"./UpdateQuestion/index\";\r\nimport CommentList from \"./CommentList\";\r\nimport \"./home.scss\";\r\n// import \"./logo192.png\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.asyncVoteSelectedQuestion = this.asyncVoteSelectedQuestion.bind(this);\r\n    this.searchSubmitHandler = this.searchSubmitHandler.bind(this);\r\n    this.searchOrderHandler = this.searchOrderHandler.bind(this);\r\n  }\r\n  componentWillMount() {\r\n    this.props.getQuestionsByPageNumber(this.props.currentPageQuestion);\r\n  }\r\n  componentDidMount() {\r\n    this.props.getQuestionsByPageNumber(this.props.currentPageQuestion);\r\n  }\r\n  async searchSubmitHandler(event) {\r\n    event.preventDefault();\r\n    await this.props.searchQuestion(\r\n      event.target.searchValue.value,\r\n      event.target.order.value\r\n    );\r\n    // await this.props.setSelectedQuestion(i);\r\n  }\r\n\r\n  async searchOrderHandler(orderType) {\r\n    await this.props.searchQuestion(this.props.searchValue, orderType);\r\n  }\r\n\r\n  async asyncVoteSelectedQuestion(i, user_id) {\r\n    await this.props.voteSelectedQuestion(i, user_id);\r\n  }\r\n\r\n  blurBackground() {\r\n    const divTC = document.getElementById(\"blur\");\r\n    divTC.classList.toggle(\"big-container\");\r\n  }\r\n\r\n  blurLogo() {\r\n    const divATT = document.getElementById(\"blur\").getAttribute(\"class\");\r\n    if (divATT == \"container-fluid\") {\r\n      document.getElementById(\"blur\").setAttribute(\"class\", \"container-fluid\");\r\n    } else {\r\n      document.getElementById(\"blur\").removeAttribute(\"class\");\r\n      document.getElementById(\"blur\").setAttribute(\"class\", \"container-fluid\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      questions,\r\n      logoutUser,\r\n      backFromSelectedQuestion,\r\n      createQuestionToggle,\r\n      deleteSelectedQuestion,\r\n      updateQuestionToggle,\r\n      renderUpdateQuestion,\r\n      getQuestionsByPageNumber,\r\n      voteSelectedQuestion,\r\n    } = this.props;\r\n    let { selectedQuestion, maxPageQuestion, currentPageQuestion } = this.props;\r\n\r\n    const user_id = localStorage.getItem(\"user_id\");\r\n    const user_name = localStorage.getItem(\"user_name\");\r\n    let pageNum = [];\r\n\r\n    for (let i = 1; i <= maxPageQuestion; i++) {\r\n      pageNum.push(i);\r\n    }\r\n    return (\r\n      <div>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css\"\r\n          type=\"text/css\"\r\n        />\r\n        {/* CREATE QUESTION -> BUTTON*/}\r\n        <div>\r\n          <ReactTooltip id=\"createQtip\" place=\"top\" effect=\"solid\">\r\n            Create Question\r\n          </ReactTooltip>\r\n          <button\r\n            data-tip\r\n            data-for=\"createQtip\"\r\n            type=\"button\"\r\n            className=\"btn btn-lg btn-floating plus-btn rounded-circle shadow\"\r\n            onClick={() => {\r\n              createQuestionToggle();\r\n              this.blurBackground();\r\n            }}\r\n          >\r\n            <i className=\"fa fa-plus plus-icon\"></i>\r\n          </button>\r\n          {/* CREATE QUESTION -> FORM */}\r\n          {this.props.renderCreateQuestion && <QuestionEditor />}\r\n        </div>\r\n        <div className=\"container-fluid\" id=\"blur\">\r\n          <div className=\"row d-flex\">\r\n            {/*//*------------------NAVIGATION BAR------------------- */}\r\n            <nav className=\"navbar navbar-expand-lg py-4 shadow rounded navbar-light bg-light\">\r\n              <div className=\"container-fluid\">\r\n                {/* LOGO */}\r\n                <button\r\n                  className=\"navbar-brand btn\"\r\n                  onClick={() => {\r\n                    backFromSelectedQuestion();\r\n                    this.blurLogo();\r\n                  }}\r\n                  id=\"logo\"\r\n                >\r\n                  <img src=\"./logo192.png\" alt=\"Logo\" width=\"50\" height=\"50\" />\r\n                </button>\r\n                {/* NAVBAR TOGGLER IN MOBILE -> BUTTON */}\r\n                <button\r\n                  className=\"navbar-toggler toggler-btn\"\r\n                  type=\"button\"\r\n                  data-bs-toggle=\"collapse\"\r\n                  data-bs-target=\"#navbarSupportedContent\"\r\n                  aria-controls=\"navbarSupportedContent\"\r\n                  aria-expanded=\"false\"\r\n                  aria-label=\"Toggle navigation\"\r\n                >\r\n                  <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                  <br />\r\n                  {/*//*-----Search BAR------ */}\r\n                  <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                      <form\r\n                        className=\"d-flex form-horizontal\"\r\n                        onSubmit={this.searchSubmitHandler}\r\n                      >\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          placeholder=\"Search...\"\r\n                          aria-label=\"Search\"\r\n                          name=\"searchValue\"\r\n                        />\r\n                        <input type=\"hidden\" name=\"order\" value={1} />\r\n                        <button className=\"btn btn-sm search-btn\" type=\"submit\">\r\n                          <i className=\"fa fa-search\"></i>\r\n                        </button>\r\n                      </form>\r\n                    </li>\r\n                  </ul>\r\n                  <br />\r\n                  {/* PROFILE -> DROPDOWN BUTTON */}\r\n                  <ul className=\"navbar-nav ms-auto\">\r\n                    <li className=\"nav-item dropdown\">\r\n                      <button\r\n                        className=\"navbar-brand btn dropdown-toggle profile rounded\"\r\n                        id=\"navbarDropdownMenu\"\r\n                        data-bs-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\"\r\n                      >\r\n                        Profile\r\n                      </button>\r\n                      <div\r\n                        className=\"dropdown-menu dropdown-menu-lg-end\"\r\n                        aria-labelledby=\"navbarDropdownMenu\"\r\n                      >\r\n                        <p className=\"dropdown-header text-dark\">\r\n                          <b>{user_name}</b>\r\n                        </p>\r\n                        <button\r\n                          className=\"btn dropdown-item\"\r\n                          onClick={() => {\r\n                            logoutUser();\r\n                          }}\r\n                        >\r\n                          Log Out\r\n                        </button>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n\r\n            {/*//*------------------BODY------------------- */}\r\n            <div>\r\n              {/* //! ---------------QUESTION Detail ХЭСЭГ--------------- */}\r\n              {selectedQuestion.user ? (\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"card mt-5 ms-5 me-5\">\r\n                    <div className=\"card-body\">\r\n                      <h3 className=\"card-title\">\r\n                        <b>{selectedQuestion.title}</b>\r\n                      </h3>\r\n                      <div className=\"card-text row align-items-center\">\r\n                        <div className=\"col-auto\">\r\n                          <span className=\"text-secondary\">\r\n                            {selectedQuestion.votes.length}{\" \"}\r\n                          </span>\r\n                          <span className=\"text-secondary\">\r\n                            {selectedQuestion.votes.length >= 2 ? \"votes\" : \"vote\"}\r\n                          </span>\r\n                        </div>\r\n                        {selectedQuestion.user.id == user_id ? (\r\n                          <div className=\"col-auto\">\r\n                            {/* //* DELETE, UPDATE QUESTION BUTTON */}\r\n                            <button\r\n                              className=\"btn q-del-up\"\r\n                              onClick={() => {\r\n                                console.log(\"deleteSelectedQuestion\");\r\n                                deleteSelectedQuestion(selectedQuestion);\r\n                              }}\r\n                            >\r\n                              Delete\r\n                            </button>\r\n                            <button\r\n                              className=\"btn q-del-up\"\r\n                              onClick={() => {\r\n                                console.log(\"updateQuestionToggle\");\r\n                                updateQuestionToggle();\r\n                              }}\r\n                            >\r\n                              Update\r\n                            </button>\r\n                            {renderUpdateQuestion ? <UpdateQuestion /> : null}\r\n                          </div>\r\n                        ) : (\r\n                          <span className=\"col-auto\">\r\n                            {selectedQuestion &&\r\n                            selectedQuestion.votes &&\r\n                            !selectedQuestion.votes.includes(user_id) ? (\r\n                              <div>\r\n                                <button\r\n                                  className=\"btn q-vote-btn\"\r\n                                  onClick={(e) => {\r\n                                    this.asyncVoteSelectedQuestion(\r\n                                      selectedQuestion,\r\n                                      user_id\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  <i className=\"fa fa-heart-o\"></i>\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              <div>\r\n                                <button\r\n                                  className=\"btn q-vote-btn\"\r\n                                  onClick={(e) => {\r\n                                    this.asyncVoteSelectedQuestion(\r\n                                      selectedQuestion,\r\n                                      user_id\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  <i className=\"fa fa-heart\"></i>\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <hr />\r\n                    </div>\r\n                  </div>\r\n                  {/* //* Question Detail Body */}\r\n                  <div className=\"card ms-5 me-5\">\r\n                    <div\r\n                      className=\"comment card-body\"\r\n                      dangerouslySetInnerHTML={{ __html: selectedQuestion.question }}\r\n                    ></div>\r\n                  </div>\r\n                  {/* //* DELETE, UPDATE QUESTION BUTTON */}\r\n                  <button\r\n                    onClick={() => {\r\n                      deleteSelectedQuestion(selectedQuestion);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      updateQuestionToggle();\r\n                    }}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                  {renderUpdateQuestion ? <UpdateQuestion /> : null}\r\n\r\n                  {/*  aa */}\r\n                  <div className=\"ms-5 me-5 mt-5\">\r\n                    <div className=\"ms-3\">\r\n                      <hr />\r\n                    </div>\r\n                    <h5 className=\"mt-5 ms-3\">Add a comment:</h5>\r\n                    <div className=\"mt-3\">\r\n                      <CommentList\r\n                        selectedQuestion={selectedQuestion}\r\n                        user_id={user_id}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                // ! ----АСУУЛТУУДЫН ЖАГСААЛТ--------------\r\n                questions &&\r\n                questions.length > 0 &&\r\n                questions.map((i, idx) => (\r\n                  <div key={idx}>\r\n                    <div className=\"card-group shadow p-5 m-5 border rounded\">\r\n                      <div className=\"col-sm-2\">\r\n                        <div className=\"card text-center\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"card-text\">\r\n                              <span>{i.votes.length} </span>\r\n                              {i.votes.length >= 2 ? \"votes\" : \"vote\"}\r\n                              {i && i.votes && !i.votes.includes(user_id) ? (\r\n                                <div>\r\n                                  <button\r\n                                    className=\"btn btn-lg q-vote-btn\"\r\n                                    onClick={(e) => {\r\n                                      this.asyncVoteSelectedQuestion(i, user_id);\r\n                                    }}\r\n                                  >\r\n                                    <i className=\"fa fa-heart-o\"></i>\r\n                                  </button>\r\n                                </div>\r\n                              ) : (\r\n                                <div>\r\n                                  <button\r\n                                    className=\"btn btn-lg q-vote-btn\"\r\n                                    onClick={(e) => {\r\n                                      this.asyncVoteSelectedQuestion(i, user_id);\r\n                                    }}\r\n                                  >\r\n                                    <i className=\"fa fa-heart\"></i>\r\n                                  </button>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                            <hr />\r\n                            <p className=\"card-text\">\r\n                              <span>{i.comments} </span>\r\n                              {i.comments >= 2 ? \"answers\" : \"answer\"}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-sm-10\">\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <h5\r\n                              className=\"card-title\"\r\n                              onClick={() => this.props.setSelectedQuestion(i)}\r\n                            >\r\n                              <b>{i.title}</b>\r\n                            </h5>\r\n                            <div\r\n                              className=\"questionStyle card-body\"\r\n                              dangerouslySetInnerHTML={{\r\n                                __html: i.question,\r\n                              }}\r\n                            ></div>\r\n                            <p className=\"card-text\">\r\n                              {/* {i.question.substring(0, 300)} */}\r\n                              {i.question.length >= 300 ? \" ...\" : \"\"}\r\n                            </p>\r\n                            <p className=\"card-text text-end\">\r\n                              <i>by </i>\r\n                              <b> {i.user.username}</b>\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n\r\n              {/*  ----------Pagination---------------- */}\r\n              {!selectedQuestion && (\r\n                <nav aria-label=\"Page navigation example\">\r\n                  <div>\r\n                    <ul className=\"pagination justify-content-center\">\r\n                      {currentPageQuestion >= 2 ? (\r\n                        <li className=\"page-item\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn pg-btn\"\r\n                            onClick={() =>\r\n                              getQuestionsByPageNumber(--currentPageQuestion)\r\n                            }\r\n                          >\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                          </button>{\" \"}\r\n                        </li>\r\n                      ) : (\r\n                        <button className=\"btn btn-dark pg-btn\" disabled>\r\n                          <span aria-hidden=\"true\">&laquo;</span>\r\n                        </button>\r\n                      )}\r\n\r\n                      {pageNum &&\r\n                        pageNum.length > 0 &&\r\n                        pageNum.map((number, idx) => (\r\n                          <li key={idx} className=\"page-item\">\r\n                            <button\r\n                              className=\"page-link pg-btn\"\r\n                              onClick={() => {\r\n                                getQuestionsByPageNumber(number);\r\n                              }}\r\n                            >\r\n                              {number}\r\n                            </button>\r\n                          </li>\r\n                        ))}\r\n                      {currentPageQuestion >= maxPageQuestion ? null : (\r\n                        <li className=\"page-item\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn pg-btn\"\r\n                            onClick={() =>\r\n                              getQuestionsByPageNumber(++currentPageQuestion)\r\n                            }\r\n                          >\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                          </button>\r\n                        </li>\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                </nav>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    questions: state.question.questions,\r\n    selectedQuestion: state.question.selectedQuestion,\r\n    renderCreateQuestion: state.question.renderCreateQuestion,\r\n    user: state.auth.user,\r\n    renderUpdateQuestion: state.question.renderUpdateQuestion,\r\n    maxPageQuestion: state.question.maxPageQuestion,\r\n    currentPageQuestion: state.question.currentPageQuestion,\r\n    searchValue: state.question.searchValue,\r\n    renderOrderButton: state.question.renderOrderButton,\r\n  };\r\n};\r\nconst Container = connect(mapStateToProps, {\r\n  logoutUser,\r\n  getQuestionsByPageNumber,\r\n  setSelectedQuestion,\r\n  backFromSelectedQuestion,\r\n  createQuestionToggle,\r\n  deleteSelectedQuestion,\r\n  updateQuestionToggle,\r\n  voteSelectedQuestion,\r\n  searchQuestion,\r\n})(Home);\r\n\r\nexport default Container;\r\n","import React, { Component } from \"react\";\r\nimport \"./notFoundPage.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nclass NotFoundPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"notFoundPage\" style={{ background: \"#181828\" }}>\r\n        {/*dust particel*/}\r\n        <div>\r\n          <div className=\"starsec\" />\r\n          <div className=\"starthird\" />\r\n          <div className=\"starfourth\" />\r\n          <div className=\"starfifth\" />\r\n        </div>\r\n        {/*Dust particle end-*/}\r\n        <div className=\"lamp__wrap\">\r\n          <div className=\"lamp\">\r\n            <div className=\"cable\" />\r\n            <div className=\"cover\" />\r\n            <div className=\"in-cover\">\r\n              <div className=\"bulb\" />\r\n            </div>\r\n            <div className=\"light\" />\r\n          </div>\r\n        </div>\r\n        {/* END Lamp */}\r\n        <section className=\"error\">\r\n          {/* Content */}\r\n          <div className=\"error__content\">\r\n            <div className=\"error__message message\">\r\n              <h1 className=\"message__title\">Page Not Found</h1>\r\n              <p className=\"message__text\">\r\n                We're sorry, the page you were looking for isn't found here. The link you\r\n                followed may either be broken or no longer exists. Please try again, or\r\n                take a look at our.\r\n              </p>\r\n            </div>\r\n            <div className=\"error__nav e-nav\">\r\n              <Link to=\"/\" className=\"e-nav__link\" />\r\n            </div>\r\n          </div>\r\n          {/* END Content */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./screens/Login/login\";\r\nimport Home from \"./screens/Home/Home\";\r\nimport { connect } from \"react-redux\";\r\nimport NotFoundPage from \"../src/screens/NotFoundPage\";\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let { isSignedIn } = this.props;\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            {isSignedIn ? (\r\n              <Route path=\"/\" component={Home} />\r\n            ) : (\r\n              <Route path=\"/\" component={Login} />\r\n            )}\r\n            <Route component={NotFoundPage} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isSignedIn: state.auth.isSignedIn };\r\n};\r\nexport default connect(mapStateToProps, null)(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport combineReducers from \"./redux/reducers\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst store = createStore(combineReducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}